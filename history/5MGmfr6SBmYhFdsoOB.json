[{
  "history_id" : "f769m5yj1jw",
  "history_input" : "# Data Preparation for Sentinel 2\n\nprint(\"Not ready yet..Prepare sentinel 2 into .csv\")\n\n",
  "history_output" : "Not ready yet..Prepare sentinel 2 into .csv\n",
  "history_begin_time" : 1656439447805,
  "history_end_time" : 1656439447918,
  "history_notes" : null,
  "history_process" : "78vedq",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "4wcfoumvxn5",
  "history_input" : "# Create LSTM model\n\nprint(\"Create LSTM\")\n\n",
  "history_output" : "Create LSTM\n",
  "history_begin_time" : 1656439445605,
  "history_end_time" : 1656439445716,
  "history_notes" : null,
  "history_process" : "mxpyqt",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "o8s8v35b2n8",
  "history_input" : "from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom base_hole import BaseHole\nfrom sklearn.model_selection import train_test_split\nfrom datetime import datetime\n\nhomedir = os.path.expanduser('~')\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n\nclass RandomForestHole(BaseHole):\n  \n  all_ready_file = f\"{github_dir}/data/ready_for_training/all_ready.csv\"\n  \n\n  def preprocessing(self):\n    all_ready_pd = pd.read_csv(self.all_ready_file, header=0, index_col=0)\n    all_ready_pd = all_ready_pd.fillna(10000) # replace all nan with 10000\n    train, test = train_test_split(all_ready_pd, test_size=0.2)\n    self.train_x, self.train_y = train[['year','m','doy','ndsi','grd','eto','pr','rmax','rmin','tmmn','tmmx','vpd','vs','lat','lon','elevation','aspect','curvature','slope','eastness','northness']].to_numpy().astype('float'), train['swe'].to_numpy().astype('float')\n    self.test_x, self.test_y = test[['year','m','doy','ndsi','grd','eto','pr','rmax','rmin','tmmn','tmmx','vpd','vs','lat','lon','elevation','aspect','curvature','slope','eastness','northness']].to_numpy().astype('float'), test['swe'].to_numpy().astype('float')\n  \n  def get_model(self):\n    rfc_pipeline = Pipeline(steps = [\n      ('data_scaling', StandardScaler()),\n      ('model', RandomForestRegressor(max_depth = 15,\n                                       min_samples_leaf = 0.004,\n                                       min_samples_split = 0.008,\n                                       n_estimators = 25))])\n    return rfc_pipeline\n\n  def evaluate(self):\n    mae = metrics.mean_absolute_error(self.test_y, self.test_y_results)\n    mse = metrics.mean_squared_error(self.test_y, self.test_y_results)\n    r2 = metrics.r2_score(self.test_y, self.test_y_results)\n    rmse = math.sqrt(mse)\n\n    print(\"The random forest model performance for testing set\")\n    print(\"--------------------------------------\")\n    print('MAE is {}'.format(mae))\n    print('MSE is {}'.format(mse))\n    print('R2 score is {}'.format(r2))\n    print('RMSE is {}'.format(rmse))\n    return {\"mae\":mae, \"mse\": mse, \"r2\": r2, \"rmse\": rmse}\n  \n",
  "history_output" : "",
  "history_begin_time" : 1656439446727,
  "history_end_time" : 1656439447356,
  "history_notes" : null,
  "history_process" : "c2xkhz",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "o558v8spndm",
  "history_input" : "# GhostNet\n\nprint(\"Create GhostNet\")\n\n",
  "history_output" : "Create GhostNet\n",
  "history_begin_time" : 1656439445370,
  "history_end_time" : 1656439445475,
  "history_notes" : null,
  "history_process" : "rauqsh",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "snwmwrehb88",
  "history_input" : "# Find the best model\nprint(\"model comparison script\")\nprint(\"hello world\")",
  "history_output" : "model comparison script\nhello world\n",
  "history_begin_time" : 1656443789179,
  "history_end_time" : 1656443789297,
  "history_notes" : null,
  "history_process" : "mi3e5n",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "4p0lacf7gb4",
  "history_input" : "# Integrate all the datasets into one training dataset\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport math\nfrom datetime import datetime\n\n\nprint(\"integrating datasets into one dataset\")\n#pd.set_option('display.max_columns', None)\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\ngridcells_file = f\"{github_dir}/data/snowcast_provided/grid_cells.geojson\"\nmodel_dir = f\"{github_dir}/model/\"\ntraining_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_train_features.csv\"\ntesting_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_test_features.csv\"\ntrain_labels_file = f\"{github_dir}/data/snowcast_provided/train_labels.csv\"\nground_measure_metadata_file = f\"{github_dir}/data/snowcast_provided/ground_measures_metadata.csv\"\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\n\n#example_mod_file = f\"{github_dir}/data/modis/mod10a1_ndsi_f191fe19-0e81-4bc9-9980-29738a05a49b.csv\"\n\n\ntraining_feature_pd = pd.read_csv(training_feature_file, header=0, index_col=0)\ntesting_feature_pd = pd.read_csv(testing_feature_file, header=0, index_col=0)\ntrain_labels_pd = pd.read_csv(train_labels_file, header=0, index_col=0)\n#print(training_feature_pd.head())\n\nstation_cell_mapper_pd = pd.read_csv(station_cell_mapper_file, header=0, index_col=0)\n#print(station_cell_mapper_pd.head())\n\n#example_mod_pd = pd.read_csv(example_mod_file, header=0, index_col=0)\n#print(example_mod_pd.shape)\ndef getDateStr(x):\n  return x.split(\" \")[0]\n\ndef integrate_modis():\n  \"\"\"\n  Integrate all MODIS data into mod_all.csv\n  \"\"\"\n  all_mod_file = f\"{github_dir}/data/ready_for_training/modis_all.csv\"\n  if os.path.isfile(all_mod_file):\n    return\n  dates = pd.date_range(start='1/1/2013', end='12/31/2021', freq='D').astype(str)\n  mod_all_df = pd.DataFrame(columns=[\"date\"])\n  mod_all_df['date'] = dates\n  \n  #print(mod_all_df.head())\n  for ind in station_cell_mapper_pd.index:\n    current_cell_id = station_cell_mapper_pd[\"cell_id\"][ind]\n    print(current_cell_id)\n    mod_single_file = f\"{github_dir}/data/sat_training/modis/mod10a1_ndsi_{current_cell_id}.csv\"\n    if os.path.isfile(mod_single_file):\n      mod_single_pd = pd.read_csv(mod_single_file, header=0)\n      mod_single_pd = mod_single_pd[[\"date\", \"mod10a1_ndsi\"]]\n      mod_single_pd = mod_single_pd.rename(columns={\"mod10a1_ndsi\": current_cell_id})\n      mod_single_pd['date'] = pd.to_datetime(mod_single_pd['date']).astype(str)\n      print(mod_all_df.shape)\n      mod_all_df = pd.merge(mod_all_df, mod_single_pd, how='left', on=\"date\")\n  mod_all_df.to_csv(all_mod_file)\n\n  \ndef integrate_sentinel1():\n  \"\"\"\n  Integrate all Sentinel 1 data into sentinel1_all.csv\n  \"\"\"\n  all_sentinel1_file = f\"{github_dir}/data/ready_for_training/sentinel1_all.csv\"\n  if os.path.isfile(all_sentinel1_file):\n    return\n  dates = pd.date_range(start='1/1/2013', end='12/31/2021', freq='D').astype(str)\n  sentinel1_all_df = pd.DataFrame(columns=[\"date\"])\n  sentinel1_all_df['date'] = dates\n  #print(mod_all_df.head())\n  \n  for ind in station_cell_mapper_pd.index:\n    current_cell_id = station_cell_mapper_pd[\"cell_id\"][ind]\n    print(current_cell_id)\n    sentinel1_single_file = f\"{github_dir}/data/sat_training/sentinel1/s1_grd_vv_{current_cell_id}.csv\"\n    if os.path.isfile(sentinel1_single_file) and current_cell_id not in sentinel1_all_df :\n      sentinel1_single_pd = pd.read_csv(sentinel1_single_file, header=0)\n      sentinel1_single_pd = sentinel1_single_pd[[\"date\", \"s1_grd_vv\"]]\n      sentinel1_single_pd = sentinel1_single_pd.rename(columns={\"s1_grd_vv\": current_cell_id})\n      #sentinel1_single_pd['date'] = sentinel1_single_pd['date'].astype('datetime64[ns]')\n      sentinel1_single_pd['date'] = pd.to_datetime(sentinel1_single_pd['date']).dt.round(\"D\").astype(str)\n      print(\"sentinel1_single_pd: \", sentinel1_single_pd.head())\n      print(\"sentinel1_single_pd check value: \", sentinel1_single_pd[sentinel1_single_pd[\"date\"]==\"2015-04-01\"])\n      sentinel1_single_pd = sentinel1_single_pd.drop_duplicates(subset=['date'], keep='first') # this will remove all the other values of the same day\n      \n      sentinel1_all_df = pd.merge(sentinel1_all_df, sentinel1_single_pd, how='left', on=\"date\")\n      print(\"sentinel1_all_df check value: \", sentinel1_all_df[sentinel1_all_df[\"date\"]==\"2015-04-01\"])\n      print(\"sentinel1_all_df: \", sentinel1_all_df.shape)\n      \n\n  print(sentinel1_all_df.shape)\n  sentinel1_all_df.to_csv(all_sentinel1_file)\n\ndef integrate_gridmet():\n  \"\"\"\n  Integrate all gridMET data into gridmet_all.csv\n  \"\"\"\n  \n  \n  dates = pd.date_range(start='1/1/2013', end='12/31/2021', freq='D').astype(str)\n  \n  #print(mod_all_df.head())\n  var_list = ['tmmn', 'tmmx', 'pr', 'vpd', 'eto', 'rmax', 'rmin', 'vs']\n  \n  for var in var_list:\n    gridmet_all_df = pd.DataFrame(columns=[\"date\"])\n    gridmet_all_df['date'] = dates\n    all_gridmet_file = f\"{github_dir}/data/ready_for_training/gridmet_{var}_all.csv\"\n    if os.path.isfile(all_gridmet_file):\n      return\n    for ind in station_cell_mapper_pd.index:\n      current_cell_id = station_cell_mapper_pd[\"cell_id\"][ind]\n      print(current_cell_id)\n      gridmet_single_file = f\"{github_dir}/data/sim_training/gridmet/{var}_{current_cell_id}.csv\"\n      if os.path.isfile(gridmet_single_file) and current_cell_id not in gridmet_all_df :\n        gridmet_single_pd = pd.read_csv(gridmet_single_file, header=0)\n        gridmet_single_pd = gridmet_single_pd[[\"date\", var]]\n        gridmet_single_pd = gridmet_single_pd.rename(columns={var: current_cell_id})\n        #sentinel1_single_pd['date'] = sentinel1_single_pd['date'].astype('datetime64[ns]')\n        gridmet_single_pd['date'] = pd.to_datetime(gridmet_single_pd['date']).dt.round(\"D\").astype(str)\n        print(\"gridmet_single_pd: \", gridmet_single_pd.head())\n        print(\"gridmet_single_pd check value: \", gridmet_single_pd[gridmet_single_pd[\"date\"]==\"2015-04-01\"])\n        gridmet_single_pd = gridmet_single_pd.drop_duplicates(subset=['date'], keep='first') # this will remove all the other values of the same day\n\n        gridmet_all_df = pd.merge(gridmet_all_df, gridmet_single_pd, how='left', on=\"date\")\n        print(\"gridmet_all_df check value: \", gridmet_all_df[gridmet_all_df[\"date\"]==\"2015-04-01\"])\n        print(\"gridmet_all_df: \", gridmet_all_df.shape)\n      \n    print(gridmet_all_df.shape)\n    gridmet_all_df.to_csv(all_gridmet_file)\n  \n  \ndef prepare_training_csv():\n  \"\"\"\n  MOD model:\n    input columns: [m, doy, ndsi]\n    output column: [swe]\n  Sentinel1 model:\n    input columns: [m, doy, grd]\n    output column: [swe]\n  gridMET model:\n    input columns: [m, doy, tmmn, tmmx, pr, vpd, eto, rmax, rmin, vs]\n    output column: [swe]\n  \"\"\"\n  all_ready_file = f\"{github_dir}/data/ready_for_training/all_ready.csv\"\n  if os.path.isfile(all_ready_file):\n      return\n  \n  all_mod_file = f\"{github_dir}/data/ready_for_training/modis_all.csv\"\n  modis_all_pd = pd.read_csv(all_mod_file, header=0)\n  all_sentinel1_file = f\"{github_dir}/data/ready_for_training/sentinel1_all.csv\"\n  sentinel1_all_pd = pd.read_csv(all_sentinel1_file, header=0)\n  all_gridmet_eto_file = f\"{github_dir}/data/ready_for_training/gridmet_eto_all.csv\"\n  gridmet_eto_all_pd = pd.read_csv(all_gridmet_eto_file, header=0, index_col = 0)\n  all_gridmet_pr_file = f\"{github_dir}/data/ready_for_training/gridmet_pr_all.csv\"\n  gridmet_pr_all_pd = pd.read_csv(all_gridmet_pr_file, header=0, index_col = 0)\n  all_gridmet_rmax_file = f\"{github_dir}/data/ready_for_training/gridmet_rmax_all.csv\"\n  gridmet_rmax_all_pd = pd.read_csv(all_gridmet_rmax_file, header=0, index_col = 0)\n  all_gridmet_rmin_file = f\"{github_dir}/data/ready_for_training/gridmet_rmin_all.csv\"\n  gridmet_rmin_all_pd = pd.read_csv(all_gridmet_rmin_file, header=0, index_col = 0)\n  all_gridmet_tmmn_file = f\"{github_dir}/data/ready_for_training/gridmet_tmmn_all.csv\"\n  gridmet_tmmn_all_pd = pd.read_csv(all_gridmet_tmmn_file, header=0, index_col = 0)\n  all_gridmet_tmmx_file = f\"{github_dir}/data/ready_for_training/gridmet_tmmx_all.csv\"\n  gridmet_tmmx_all_pd = pd.read_csv(all_gridmet_tmmx_file, header=0, index_col = 0)\n  all_gridmet_vpd_file = f\"{github_dir}/data/ready_for_training/gridmet_vpd_all.csv\"\n  gridmet_vpd_all_pd = pd.read_csv(all_gridmet_vpd_file, header=0, index_col = 0)\n  all_gridmet_vs_file = f\"{github_dir}/data/ready_for_training/gridmet_vs_all.csv\"\n  gridmet_vs_all_pd = pd.read_csv(all_gridmet_vs_file, header=0, index_col = 0)\n  \n  grid_terrain_file = f\"{github_dir}/data/terrain/gridcells_terrainData.csv\"\n  grid_terrain_pd = pd.read_csv(grid_terrain_file, header=0, index_col = 1)\n  \n  print(\"modis_all_size: \", modis_all_pd.shape)\n  print(\"station size: \", station_cell_mapper_pd.shape)\n  print(\"training_feature_pd size: \", training_feature_pd.shape)\n  print(\"testing_feature_pd size: \", testing_feature_pd.shape)\n  \n  all_training_pd = pd.DataFrame(columns=[\"cell_id\", \"year\", \"m\", \"doy\", \"ndsi\", \"grd\", \"eto\", \"pr\", \"rmax\", \"rmin\", \"tmmn\", \"tmmx\", \"vpd\", \"vs\", \"lat\", \"lon\", \"elevation\", \"aspect\", \"curvature\", \"slope\", \"eastness\", \"northness\", \"swe\"])\n  all_training_pd = all_training_pd.reset_index()\n  for index, row in modis_all_pd.iterrows():\n    dt = datetime.strptime(row['date'], '%Y-%m-%d')\n    month = dt.month\n    year = dt.year\n    doy = dt.timetuple().tm_yday\n    print(f\"Dealing {year} {doy}\")\n    for i in range(3,len(row.index)):\n      cell_id = row.index[i][:-2]\n      if cell_id in train_labels_pd.index and row['date'] in train_labels_pd:\n        ndsi = row.values[i]\n        swe = train_labels_pd.loc[cell_id, row['date']]\n        grd = sentinel1_all_pd.loc[index, cell_id]\n        eto = gridmet_eto_all_pd.loc[index, cell_id]\n        pr = gridmet_pr_all_pd.loc[index, cell_id]\n        rmax = gridmet_rmax_all_pd.loc[index, cell_id]\n        rmin = gridmet_rmin_all_pd.loc[index, cell_id]\n        tmmn = gridmet_tmmn_all_pd.loc[index, cell_id]\n        tmmx = gridmet_tmmx_all_pd.loc[index, cell_id]\n        vpd = gridmet_vpd_all_pd.loc[index, cell_id]\n        vs = gridmet_vs_all_pd.loc[index, cell_id]\n        lat = grid_terrain_pd.loc[cell_id, \"Longitude [deg]\"]\n        lon = grid_terrain_pd.loc[cell_id, \"Latitude [deg]\"]\n        elevation = grid_terrain_pd.loc[cell_id, \"Elevation [m]\"]\n        aspect = grid_terrain_pd.loc[cell_id, \"Aspect [deg]\"]\n        curvature = grid_terrain_pd.loc[cell_id, \"Curvature [ratio]\"]\n        slope = grid_terrain_pd.loc[cell_id, \"Slope [deg]\"]\n        eastness = grid_terrain_pd.loc[cell_id, \"Eastness [unitCirc.]\"]\n        northness = grid_terrain_pd.loc[cell_id, \"Northness [unitCirc.]\"]\n        \n        if not np.isnan(swe):\n          json_kv = {\"cell_id\": cell_id, \"year\":year, \"m\":month, \"doy\": doy, \"ndsi\":ndsi, \"grd\":grd, \"eto\":eto, \"pr\":pr, \"rmax\":rmax, \"rmin\":rmin, \"tmmn\":tmmn, \"tmmx\":tmmx, \"vpd\":vpd, \"vs\":vs, \"lat\":lat, \"lon\":lon, \"elevation\":elevation, \"aspect\":aspect, \"curvature\":curvature, \"slope\":slope, \"eastness\":eastness, \"northness\":northness, \"swe\":swe}\n          # print(json_kv)\n          all_training_pd = all_training_pd.append(json_kv, ignore_index = True)\n  \n  print(all_training_pd.shape)\n  all_training_pd.to_csv(all_ready_file)\n  \n  \"\"\"\n  grd_all_pd = pd.DataFrame(columns=[\"year\", \"m\", \"doy\", \"grd\", \"swe\"])\n  grd_all_pd = grd_all_pd.reset_index()\n  for index, row in sentinel1_all_pd.iterrows():\n    dt = datetime.strptime(row['date'], '%Y-%m-%d')\n    year = dt.year\n    month = dt.month\n    doy = dt.timetuple().tm_yday\n    for i in range(3,len(row.index)):\n      cell_id = row.index[i]\n      grd = row.values[i]\n      if not np.isnan(grd) and cell_id in train_labels_pd.index and row['date'] in train_labels_pd:\n        swe = train_labels_pd.loc[cell_id, row['date']]\n        if not np.isnan(swe):\n          print([month, doy, grd, swe])\n          grd_all_pd = grd_all_pd.append({\"year\": year, \"m\":month, \"doy\": doy, \"grd\": grd, \"swe\": swe}, ignore_index = True)\n  \n  print(grd_all_pd.shape)\n  grd_all_pd.to_csv(f\"{github_dir}/data/ready_for_training/sentinel1_ready.csv\")\n  \"\"\"\n  \n#exit() # done already\n\n#integrate_modis()\n#integrate_sentinel1()\n#integrate_gridmet()\n#prepare_training_csv()\n\n\n  \n  \n  \n",
  "history_output" : "integrating datasets into one dataset\nC:\\Users\\BLi\n",
  "history_begin_time" : 1656443767794,
  "history_end_time" : 1656443770359,
  "history_notes" : null,
  "history_process" : "u7xh2p",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "h6037mtzppa",
  "history_input" : "# Deploy model to service\n\nprint(\"deploy model to service\")\n",
  "history_output" : "deploy model to service\n",
  "history_begin_time" : 1656443790016,
  "history_end_time" : 1656443790130,
  "history_notes" : null,
  "history_process" : "2wkl6e",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "qu1z2bcsf76",
  "history_input" : "# Predict results using the model\n\nfrom sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.model_selection import RandomizedSearchCV\n\nexit()  # for now, the workflow is not ready yet\n\n# read the grid geometry file\n\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\nmodis_test_ready_file = f\"{github_dir}/data/ready_for_training/modis_test_ready.csv\"\nmodis_test_ready_pd = pd.read_csv(modis_test_ready_file, header=0, index_col=0)\n\npd_to_clean = modis_test_ready_pd[[\"year\", \"m\", \"doy\", \"ndsi\", \"swe\", \"station_id\", \"cell_id\"]].dropna()\n\nall_features = pd_to_clean[[\"year\", \"m\", \"doy\", \"ndsi\"]].to_numpy()\nall_labels = pd_to_clean[[\"swe\"]].to_numpy().ravel()\n\ndef evaluate(model, test_features, y_test, model_name):\n    y_predicted = model.predict(test_features)\n    mae = metrics.mean_absolute_error(y_test, y_predicted)\n    mse = metrics.mean_squared_error(y_test, y_predicted)\n    r2 = metrics.r2_score(y_test, y_predicted)\n    rmse = math.sqrt(mse)\n\n    print(\"The {} model performance for testing set\".format(model_name))\n    print(\"--------------------------------------\")\n    print('MAE is {}'.format(mae))\n    print('MSE is {}'.format(mse))\n    print('R2 score is {}'.format(r2))\n    print('RMSE is {}'.format(rmse))\n    \n    return y_predicted\n\nbase_model = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic.joblib\")\nbasic_predicted_values = evaluate(base_model, all_features, all_labels, \"Base Model\")\n\nbest_random = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest.joblib\")\nrandom_predicted_values = evaluate(best_random, all_features, all_labels, \"Optimized\")\n",
  "history_output" : "",
  "history_begin_time" : 1656443790315,
  "history_end_time" : 1656443792688,
  "history_notes" : null,
  "history_process" : "i2fynz",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "pratx0166t0",
  "history_input" : "from model_creation_rf import RandomForestHole\nfrom model_creation_xgboost import XGBoostHole\n\nprint(\"Train Models\")\n\nworm_holes = [RandomForestHole(), XGBoostHole()]\n\nfor hole in worm_holes:\n  hole.preprocessing()\n  print(hole.train_x.dtype)\n  print(hole.train_y.dtype)\n  print(hole.train_x.shape)\n  print(hole.train_y.shape)\n  hole.train()\n  hole.test()\n  hole.evaluate()\n  hole.save()\n  \nprint(\"Finished training and validating all the models.\")\n",
  "history_output" : "",
  "history_begin_time" : 1656443771217,
  "history_end_time" : 1656443780449,
  "history_notes" : null,
  "history_process" : "e8k4wq",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "6wkadp4hz73",
  "history_input" : "# Test models\n\n# Random Forest model creation and save to file\n\nfrom sklearn.ensemble import RandomForestRegressor,ExtraTreesRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom datetime import datetime\n\ndef turn_doy_to_date(year, doy):\n  doy = int(doy)\n  doy = str(doy)\n  doy.rjust(3 + len(doy), '0')\n  #res = datetime.strptime(str(year) + \"-\" + doy, \"%Y-%j\").strftime(\"%m/%d/%Y\")\n  res = datetime.strptime(str(year) + \"-\" + doy, \"%Y-%j\").strftime(\"%Y-%m-%d\")\n  return res\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\ntest_ready_file = f\"{github_dir}/data/ready_for_testing/all_ready_3.csv\"\ntest_ready_pd = pd.read_csv(test_ready_file, header=0, index_col=0)\nsubmission_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_pd = pd.read_csv(submission_file, header=0, index_col=0)\npredicted_file = f\"{homedir}/Documents/GitHub/SnowCast/data/results/wormhole_output_4.csv\"\n\ntrain_cols = ['year','m','doy','ndsi','grd','eto','pr','rmax','rmin','tmmn','tmmx','vpd','vs','lat','lon','elevation','aspect','curvature','slope','eastness','northness']\n\nprint(test_ready_pd.shape)\npd_to_clean = test_ready_pd[train_cols]\nprint(\"PD shape: \", pd_to_clean.shape)\n\ndoy_list = test_ready_pd[\"doy\"].unique()\nprint(doy_list)\n\ndate_list = [turn_doy_to_date(2022, doy_list[i]) for i in range(len(doy_list)) ]\nprint(date_list)\n\nall_features = pd_to_clean.to_numpy()\nall_features = np.nan_to_num(all_features)\nprint(\"train feature shape: \", all_features.shape)\n#all_features = pd_to_clean[[\"year\", \"m\", \"doy\", \"ndsi\"]].to_numpy()\n#all_labels = pd_to_clean[[\"swe\"]].to_numpy().ravel()\n\n#base_model = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic_v2.joblib\")\n#base_model = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic_v2.joblib\")\n\nbest_random = joblib.load(f\"{homedir}/Documents/GitHub/SnowCast/model/wormhole_20221305163806.joblib\")\ny_predicted = best_random.predict(all_features)\nprint(y_predicted) #first got daily prediction\n\ntarget_dates = [\"2022-01-13\",\"2022-01-20\",\"2022-01-27\",\"2022-02-03\",\"2022-02-10\",\"2022-02-17\",\"2022-02-24\",\"2022-03-03\",\"2022-03-10\",\"2022-03-17\",\"2022-03-24\",\"2022-03-31\",\"2022-04-07\",\"2022-04-14\",\"2022-04-21\",\"2022-04-28\",\"2022-05-05\",\"2022-05-12\",\"2022-05-19\",\"2022-05-26\",\"2022-06-02\",\"2022-06-09\",\"2022-06-16\",\"2022-06-23\",\"2022-06-30\"]\nprint(\"taregt date list: \", len(target_dates))\n\ndaily_predictions = pd.DataFrame(columns = target_dates, index = submission_pd.index)\nfor i in range(len(y_predicted)):\n  doy = all_features[i][2]\n  #print(doy)\n  ndate = turn_doy_to_date(2022, doy)\n  if ndate in target_dates:\n    cell_id = test_ready_pd[\"cell_id\"].iloc[i]\n    daily_predictions.at[cell_id, ndate] = y_predicted[i]\n  #print(ndate, cell_id)\n  #print(y_predicted[i])\n  \nprint(daily_predictions.shape)\n#daily_predictions = daily_predictions[[\"2022-01-13\"]]\n\nif os.path.exists(predicted_file):\n  os.remove(predicted_file)\n  \ndaily_predictions.fillna(0.0, inplace=True)\ndaily_predictions.to_csv(predicted_file, date_format=\"%Y-%d-%m\")\n\n\n# turn daily into weekly using mean values\n\n\n\n\n\n",
  "history_output" : "",
  "history_begin_time" : 1656443781456,
  "history_end_time" : 1656443783174,
  "history_notes" : null,
  "history_process" : "h1qp9v",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "swatjljae3m",
  "history_input" : "# Load dependencies\nimport geopandas as gpd\nimport json\nimport geojson\nfrom pystac_client import Client\nimport planetary_computer\nimport xarray\nimport rioxarray\nimport xrspatial\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom pyproj import Proj, transform\nimport os\nimport sys, traceback\nimport requests\n\nhome_dir = os.path.expanduser('~')\nsnowcast_github_dir = f\"{home_dir}/Documents/GitHub/SnowCast/\"\n\n#exit() # this process no longer need to execute, we need to make Geoweaver to specify which process doesn't need to run\n\n# user-defined paths for data-access\ndata_dir = f'{snowcast_github_dir}data/'\ngridcells_file = data_dir+'snowcast_provided/grid_cells_eval.geojson'\nstations_file = data_dir+'snowcast_provided/ground_measures_metadata.csv'\ngridcells_outfile = data_dir+'terrain/gridcells_terrainData_eval.csv'\nstations_outfile = data_dir+'terrain/station_terrainData_eval.csv'\n\nrequests.get('https://planetarycomputer.microsoft.com/api/stac/v1')\n\n# setup client for handshaking and data-access\nprint(\"setup planetary computer client\")\nclient = Client.open(\"https://planetarycomputer.microsoft.com/api/stac/v1\",ignore_conformance=True)\n\n# Load metadata\ngridcellsGPD = gpd.read_file(gridcells_file)\ngridcells = geojson.load(open(gridcells_file))\nstations = pd.read_csv(stations_file)\n\n# instantiate output panda dataframes\ndf_gridcells = df = pd.DataFrame(columns=(\"Longitude [deg]\",\"Latitude [deg]\",\n                                            \"Elevation [m]\",\"Aspect [deg]\",\n                                            \"Curvature [ratio]\",\"Slope [deg]\",\n                                            \"Eastness [unitCirc.]\",\"Northness [unitCirc.]\"))\ndf_station = pd.DataFrame(columns=(\"Longitude [deg]\",\"Latitude [deg]\",\n                                   \"Elevation [m]\",\"Elevation_30 [m]\",\"Elevation_1000 [m]\",\n                                   \"Aspect_30 [deg]\",\"Aspect_1000 [deg]\",\n                                   \"Curvature_30 [ratio]\",\"Curvature_1000 [ratio]\",\n                                   \"Slope_30 [deg]\",\"Slope_1000 [deg]\",\n                                   \"Eastness_30 [unitCirc.]\",\"Northness_30 [unitCirc.]\",\n                                   \"Eastness_1000 [unitCirc.]\",\"Northness_1000 [unitCirc.]\"))\n\ndef prepareGridCellTerrain():\n  # instantiate output panda dataframes\n  # Calculate gridcell characteristics using Copernicus DEM data\n  print(\"Prepare GridCell Terrain data\")\n  for idx,cell in enumerate(gridcells['features']):\n      print(\"Processing grid \", idx)\n      search = client.search(\n          collections=[\"cop-dem-glo-30\"],\n          intersects={\"type\":\"Polygon\", \"coordinates\":cell['geometry']['coordinates']},\n      )\n      items = list(search.get_items())\n      print(\"==> Searched items: \", len(items))\n\n      cropped_data = None\n      try:\n          signed_asset = planetary_computer.sign(items[0].assets[\"data\"])\n          data = (\n              #xarray.open_rasterio(signed_asset.href)\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          cropped_data = data.rio.clip(gridcellsGPD['geometry'][idx:idx+1])\n      except:\n          signed_asset = planetary_computer.sign(items[1].assets[\"data\"])\n          data = (\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          cropped_data = data.rio.clip(gridcellsGPD['geometry'][idx:idx+1])\n\n      # calculate lat/long of center of gridcell\n      longitude = np.unique(np.ravel(cell['geometry']['coordinates'])[0::2]).mean()\n      latitude = np.unique(np.ravel(cell['geometry']['coordinates'])[1::2]).mean()\n\n      print(\"reproject data to EPSG:32612\")\n      # reproject the cropped dem data\n      cropped_data = cropped_data.rio.reproject(\"EPSG:32612\")\n\n      # Mean elevation of gridcell\n      mean_elev = cropped_data.mean().values\n      print(\"Elevation: \", mean_elev)\n\n      # Calculate directional components\n      aspect = xrspatial.aspect(cropped_data)\n      aspect_xcomp = np.nansum(np.cos(aspect.values*(np.pi/180)))\n      aspect_ycomp = np.nansum(np.sin(aspect.values*(np.pi/180)))\n      mean_aspect = np.arctan2(aspect_ycomp,aspect_xcomp)*(180/np.pi)\n      if mean_aspect < 0:\n          mean_aspect = 360 + mean_aspect\n      print(\"Aspect: \", mean_aspect)\n      mean_eastness = np.cos(mean_aspect*(np.pi/180))\n      mean_northness = np.sin(mean_aspect*(np.pi/180))\n      print(\"Eastness: \", mean_eastness)\n      print(\"Northness: \", mean_northness)\n\n      # Positive curvature = upward convex\n      curvature = xrspatial.curvature(cropped_data)\n      mean_curvature = curvature.mean().values\n      print(\"Curvature: \", mean_curvature)\n\n      # Calculate mean slope\n      slope = xrspatial.slope(cropped_data)\n      mean_slope = slope.mean().values\n      print(\"Slope: \", mean_slope)\n\n      # Fill pandas dataframe\n      df_gridcells.loc[idx] = [longitude,latitude,\n                               mean_elev,mean_aspect,\n                               mean_curvature,mean_slope,\n                               mean_eastness,mean_northness]\n\n      # Comment out for debugging/filling purposes\n      # if idx % 250 == 0:\n      #     df_gridcells.set_index(gridcellsGPD['cell_id'][0:idx+1],inplace=True)\n      #     df_gridcells.to_csv(gridcells_outfile)\n\n  # Save output data into csv format\n  df_gridcells.set_index(gridcellsGPD['cell_id'][0:idx+1],inplace=True)\n  df_gridcells.to_csv(gridcells_outfile)\n\ndef prepareStationTerrain():\n  # Calculate terrain characteristics of stations, and surrounding regions using COP 30\n  for idx,station in stations.iterrows():\n      search = client.search(\n          collections=[\"cop-dem-glo-30\"],\n          intersects={\"type\":\"Point\", \"coordinates\":[station['longitude'],station['latitude']]},\n      )\n      items = list(search.get_items())\n      print(f\"Returned {len(items)} items\")\n\n      try:\n          signed_asset = planetary_computer.sign(items[0].assets[\"data\"])\n          data = (\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          xdiff = np.abs(data.x-station['longitude'])\n          ydiff = np.abs(data.y-station['latitude'])\n          xdiff = np.where(xdiff == xdiff.min())[0][0]\n          ydiff = np.where(ydiff == ydiff.min())[0][0]\n          data = data[ydiff-33:ydiff+33,xdiff-33:xdiff+33].rio.reproject(\"EPSG:32612\")\n      except:\n          traceback.print_exc(file=sys.stdout)\n          signed_asset = planetary_computer.sign(items[1].assets[\"data\"])\n          data = (\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          xdiff = np.abs(data.x-station['longitude'])\n          ydiff = np.abs(data.y-station['latitude'])\n          xdiff = np.where(xdiff == xdiff.min())[0][0]\n          ydiff = np.where(ydiff == ydiff.min())[0][0]\n          data = data[ydiff-33:ydiff+33,xdiff-33:xdiff+33].rio.reproject(\"EPSG:32612\")\n\n      # Reproject the station data to better include only 1000m surrounding area\n      inProj = Proj(init='epsg:4326')\n      outProj = Proj(init='epsg:32612')\n      new_x,new_y = transform(inProj,outProj,station['longitude'],station['latitude'])\n\n      # Calculate elevation of station and surroundings\n      mean_elevation = data.mean().values\n      elevation = data.sel(x=new_x,y=new_y,method='nearest')\n      print(elevation.values)\n\n      # Calcuate directional components\n      aspect = xrspatial.aspect(data)\n      aspect_xcomp = np.nansum(np.cos(aspect.values*(np.pi/180)))\n      aspect_ycomp = np.nansum(np.sin(aspect.values*(np.pi/180)))\n      mean_aspect = np.arctan2(aspect_ycomp,aspect_xcomp)*(180/np.pi)\n      if mean_aspect < 0:\n          mean_aspect = 360 + mean_aspect\n      print(mean_aspect)\n      aspect = aspect.sel(x=new_x,y=new_y,method='nearest')\n      print(aspect.values)\n      eastness = np.cos(aspect*(np.pi/180))\n      northness = np.sin(aspect*(np.pi/180))\n      mean_eastness = np.cos(mean_aspect*(np.pi/180))\n      mean_northness = np.sin(mean_aspect*(np.pi/180))\n\n      # Positive curvature = upward convex\n      curvature = xrspatial.curvature(data)\n      mean_curvature = curvature.mean().values\n      curvature = curvature.sel(x=new_x,y=new_y,method='nearest')\n      print(curvature.values)\n\n      # Calculate slope\n      slope = xrspatial.slope(data)\n      mean_slope = slope.mean().values\n      slope = slope.sel(x=new_x,y=new_y,method='nearest')\n      print(slope.values)\n\n      # Fill pandas dataframe\n      df_station.loc[idx] = [station['longitude'],station['latitude'],\n                             station['elevation_m'],elevation.values,mean_elevation,\n                             aspect.values,mean_aspect,\n                             curvature.values,mean_curvature,\n                             slope.values,mean_slope,\n                             eastness.values,northness.values,\n                             mean_eastness,mean_northness]\n\n      # Comment out for debugging/filling purposes\n      # if idx % 250 == 0:\n      #     df_station.set_index(stations['station_id'][0:idx+1],inplace=True)\n      #     df_station.to_csv(stations_outfile)\n\n  # Save output data into CSV format\n  df_station.set_index(stations['station_id'][0:idx+1],inplace=True)\n  df_station.to_csv(stations_outfile)\n\ntry:\n  prepareGridCellTerrain()\n  #prepareStationTerrain()\nexcept:\n  traceback.print_exc(file=sys.stdout)\n",
  "history_output" : "C:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nWarning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS with a non-EPSG compliant axis order.\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nsetup planetary computer client\nPrepare GridCell Terrain data\nProcessing grid  0\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2120.6938\nAspect:  217.68011324563136\nEastness:  -0.7914357398210251\nNorthness:  -0.6112523781008519\nCurvature:  -0.046748288\nSlope:  5.0336185\nProcessing grid  1\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3471.9036\nAspect:  155.19289454725342\nEastness:  -0.9077254538127077\nNorthness:  0.419564655923868\nCurvature:  0.11717822\nSlope:  24.953482\nProcessing grid  2\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1914.814\nAspect:  173.44081042445302\nEastness:  -0.9934543806113693\nNorthness:  0.11422956554272874\nCurvature:  0.00942702\nSlope:  17.614595\nProcessing grid  3\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1804.6176\nAspect:  192.3811198806608\nEastness:  -0.976742984945351\nNorthness:  -0.21441348222545586\nCurvature:  -0.05555519\nSlope:  12.841655\nProcessing grid  4\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3686.457\nAspect:  6.489669662054943\nEastness:  0.9935922498866476\nNorthness:  0.11302407250311532\nCurvature:  -0.04161675\nSlope:  18.612993\nProcessing grid  5\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3786.2173\nAspect:  95.48403652116228\nEastness:  -0.09556841622735353\nNorthness:  0.9954228638221021\nCurvature:  -0.007121049\nSlope:  26.77771\nProcessing grid  6\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1345.8301\nAspect:  299.3707398323038\nEastness:  0.490458772692443\nNorthness:  -0.8714643953077043\nCurvature:  0.016378662\nSlope:  11.267566\nProcessing grid  7\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2900.79\nAspect:  274.22071289313124\nEastness:  0.07359872967839165\nNorthness:  -0.9972879358488836\nCurvature:  -0.06548714\nSlope:  32.67105\nProcessing grid  8\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1255.2838\nAspect:  276.4685486395499\nEastness:  0.11265779554573373\nNorthness:  -0.9936338465968113\nCurvature:  -0.11243193\nSlope:  26.328371\nProcessing grid  9\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1731.1326\nAspect:  278.4567142541031\nEastness:  0.14706218851683012\nNorthness:  -0.9891272479861427\nCurvature:  0.022968741\nSlope:  12.057334\nProcessing grid  10\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2094.1812\nAspect:  89.0112916409838\nEastness:  0.017255359802198025\nNorthness:  0.9998511151957059\nCurvature:  0.024416748\nSlope:  10.076949\nProcessing grid  11\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  331.3498\nAspect:  262.609650851298\nEastness:  -0.1286285585226733\nNorthness:  -0.9916928425336039\nCurvature:  -0.05768589\nSlope:  16.0718\nProcessing grid  12\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3240.3425\nAspect:  88.11662565217134\nEastness:  0.0328651641582254\nNorthness:  0.9994597945814794\nCurvature:  0.022669673\nSlope:  22.973846\nProcessing grid  13\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3304.085\nAspect:  261.02517673744927\nEastness:  -0.15600044294003665\nNorthness:  -0.9877569851955046\nCurvature:  -0.1317374\nSlope:  16.328588\nProcessing grid  14\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1823.0842\nAspect:  5.145508923963943\nEastness:  0.9959701442141216\nNorthness:  0.08968540479978811\nCurvature:  0.018122088\nSlope:  6.2928886\nProcessing grid  15\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3576.177\nAspect:  98.09900859584751\nEastness:  -0.1408841012731224\nNorthness:  0.990026095619941\nCurvature:  0.063626304\nSlope:  26.524445\nProcessing grid  16\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2606.6792\nAspect:  14.783046288616744\nEastness:  0.9668989321882762\nNorthness:  0.25515966556877945\nCurvature:  -0.091937326\nSlope:  27.238976\nProcessing grid  17\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2962.6672\nAspect:  349.9972289416514\nEastness:  0.9847993535240053\nNorthness:  -0.17369580679654084\nCurvature:  0.04339221\nSlope:  21.421736\nProcessing grid  18\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3078.287\nAspect:  190.79842844618545\nEastness:  -0.9822923900016164\nNorthness:  -0.18735437156605736\nCurvature:  0.028371405\nSlope:  29.53541\nProcessing grid  19\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3916.1743\nAspect:  213.64696850300885\nEastness:  -0.83246731539834\nNorthness:  -0.5540741545979931\nCurvature:  0.09668792\nSlope:  30.096178\nProcessing grid  20\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3086.3892\nAspect:  91.78479240630503\nEastness:  -0.031145466363551245\nNorthness:  0.9995148622831963\nCurvature:  -0.043670613\nSlope:  10.518907\nProcessing grid  21\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1700.8246\nAspect:  73.26606635870361\nEastness:  0.28792774340008004\nNorthness:  0.9576521365195911\nCurvature:  -0.050066065\nSlope:  6.3208604\nProcessing grid  22\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3571.585\nAspect:  347.47937447300086\nEastness:  0.9762180292048681\nNorthness:  -0.21679105021970635\nCurvature:  0.12000399\nSlope:  31.807535\nProcessing grid  23\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1841.9855\nAspect:  325.00696695735456\nEastness:  0.8192217830310204\nNorthness:  -0.5734768262166098\nCurvature:  -0.118008785\nSlope:  31.354729\nProcessing grid  24\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2246.6226\nAspect:  216.25855963405493\nEastness:  -0.8063562572749055\nNorthness:  -0.5914301195860814\nCurvature:  0.0962\nSlope:  13.658678\nProcessing grid  25\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1824.9602\nAspect:  222.0443309177027\nEastness:  -0.7426268830395489\nNorthness:  -0.6697053923830718\nCurvature:  0.008862758\nSlope:  4.7009864\nProcessing grid  26\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1552.4861\nAspect:  74.8364497922946\nEastness:  0.26157521215744645\nNorthness:  0.9651830957827571\nCurvature:  -0.026613291\nSlope:  5.799249\nProcessing grid  27\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1927.4338\nAspect:  252.67507923181194\nEastness:  -0.297790118627167\nNorthness:  -0.9546313661555532\nCurvature:  0.028582398\nSlope:  33.38909\nProcessing grid  28\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1856.8232\nAspect:  89.03064156690245\nEastness:  0.01691768918865546\nNorthness:  0.9998568856554002\nCurvature:  -0.04536924\nSlope:  13.987566\nProcessing grid  29\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2150.4192\nAspect:  229.4796475274219\nEastness:  -0.6497181169767423\nNorthness:  -0.7601752222166914\nCurvature:  -0.042451322\nSlope:  15.870835\nProcessing grid  30\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3140.689\nAspect:  33.404822815320735\nEastness:  0.8348015241364743\nNorthness:  0.550551010624283\nCurvature:  -0.07062238\nSlope:  7.5268574\nProcessing grid  31\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  932.2599\nAspect:  199.79041346964226\nEastness:  -0.9409374322335965\nNorthness:  -0.33858049060990797\nCurvature:  -0.0379878\nSlope:  13.717633\nProcessing grid  32\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1147.3716\nAspect:  159.53446331203702\nEastness:  -0.9368826689242585\nNorthness:  0.34964391124307903\nCurvature:  -0.033276845\nSlope:  6.527311\nProcessing grid  33\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3541.9214\nAspect:  66.30279095271315\nEastness:  0.40190317305090373\nNorthness:  0.9156821716576201\nCurvature:  0.03434372\nSlope:  26.642073\nProcessing grid  34\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  450.58377\nAspect:  291.0896067467161\nEastness:  0.35982756770182556\nNorthness:  C:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\n-0.9330188216331909\nCurvature:  -0.029498136\nSlope:  9.801241\nProcessing grid  35\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2636.9148\nAspect:  202.85996878453767\nEastness:  -0.9214570524705654\nNorthness:  -0.3884802446100157\nCurvature:  -0.0072893742\nSlope:  4.8913393\nProcessing grid  36\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2670.7993\nAspect:  95.034070488831\nEastness:  -0.08774810671837718\nNorthness:  0.9961426954846079\nCurvature:  -0.05702252\nSlope:  17.121742\nProcessing grid  37\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2047.4597\nAspect:  51.33676048113719\nEastness:  0.6247418102213355\nNorthness:  0.7808313970130613\nCurvature:  -0.03535638\nSlope:  8.105335\nProcessing grid  38\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1335.297\nAspect:  227.0967174694095\nEastness:  -0.6807628359324939\nNorthness:  -0.7325038984286353\nCurvature:  -0.16417512\nSlope:  34.03324\nProcessing grid  39\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2656.8367\nAspect:  298.4444159166883\nEastness:  0.47630597317129564\nNorthness:  -0.8792796028120663\nCurvature:  0.049409624\nSlope:  15.122141\nProcessing grid  40\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1370.5\nAspect:  358.99999990102464\nEastness:  0.9998476951262432\nNorthness:  -0.017452408164466204\nCurvature:  0.0\nSlope:  0.0\nProcessing grid  41\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1796.4607\nAspect:  89.02310786824792\nEastness:  0.017049158070608767\nNorthness:  0.9998546525415999\nCurvature:  0.0030294585\nSlope:  13.352342\nProcessing grid  42\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  624.0497\nAspect:  255.15704020260034\nEastness:  -0.2561706004861175\nNorthness:  -0.9666315862036488\nCurvature:  0.10417056\nSlope:  24.366879\nProcessing grid  43\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2582.33\nAspect:  324.7078012566134\nEastness:  0.8162162622299647\nNorthness:  -0.5777464956807141\nCurvature:  -0.055021193\nSlope:  19.426573\nProcessing grid  44\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1182.033\nAspect:  338.3857912394138\nEastness:  0.9296851662183213\nNorthness:  -0.3683551163125228\nCurvature:  -0.009666364\nSlope:  31.644169\nProcessing grid  45\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1461.4144\nAspect:  246.16008963161693\nEastness:  -0.4041825294160679\nNorthness:  -0.914678349429366\nCurvature:  0.07091493\nSlope:  18.25022\nProcessing grid  46\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3564.192\nAspect:  9.558416880194196\nEastness:  0.9861168118607218\nNorthness:  0.1660531040530282\nCurvature:  -0.07069282\nSlope:  12.903219\nProcessing grid  47\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  4016.3552\nAspect:  93.42753486396313\nEastness:  -0.059786094851299\nNorthness:  0.9982112115491548\nCurvature:  0.056302153\nSlope:  23.411781\nProcessing grid  48\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2785.0195\nAspect:  285.39921905482754\nEastness:  0.26554297677956273\nNorthness:  -0.9640990236915753\nCurvature:  -0.018986339\nSlope:  9.606698\nProcessing grid  49\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1494.3625\nAspect:  251.78016735618934\nEastness:  -0.31266372780721147\nNorthness:  -0.9498638814660225\nCurvature:  0.00067853194\nSlope:  0.3170457\nProcessing grid  50\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1879.8671\nAspect:  278.3383607361651\nEastness:  0.14501867704085275\nNorthness:  -0.9894289177648493\nCurvature:  0.055334818\nSlope:  15.146703\nProcessing grid  51\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3467.8894\nAspect:  208.28759226886666\nEastness:  -0.880579999395633\nNorthness:  -0.4738975254887779\nCurvature:  -0.041695688\nSlope:  21.773903\nProcessing grid  52\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3011.0647\nAspect:  17.738124217928174\nEastness:  0.9524589688647312\nNorthness:  0.30466688797624997\nCurvature:  -0.17876619\nSlope:  20.173325\nProcessing grid  53\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1879.2822\nAspect:  201.57587956019694\nEastness:  -0.9299313769698505\nNorthness:  -0.3677331017558221\nCurvature:  -0.05887728\nSlope:  40.198074\nProcessing grid  54\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2949.5845\nAspect:  323.620841537003\nEastness:  0.8051096022632402\nNorthness:  -0.5931260644614492\nCurvature:  0.028107414\nSlope:  12.044895\nProcessing grid  55\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1650.6384\nAspect:  23.732866846779768\nEastness:  0.9154318715110453\nNorthness:  0.40247296632418056\nCurvature:  -0.015231282\nSlope:  11.813165\nProcessing grid  56\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2997.2664\nAspect:  157.2610758279333\nEastness:  -0.9222757094056708\nNorthness:  0.38653268405177144\nCurvature:  0.031822767\nSlope:  9.759972\nProcessing grid  57\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1456.6067\nAspect:  210.98977902906378\nEastness:  -0.8572591644967683\nNorthness:  -0.5148851569877527\nCurvature:  -0.059273798\nSlope:  13.639825\nProcessing grid  58\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1957.9369\nAspect:  64.93767519424856\nEastness:  0.4236038687149948\nNorthness:  0.905847538170574\nCurvature:  0.0017555926\nSlope:  20.64168\nProcessing grid  59\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2039.3713\nAspect:  221.71387270527913\nEastness:  -0.7464770919120662\nNorthness:  -0.6654111144627091\nCurvature:  0.024431117\nSlope:  12.890226\nProcessing grid  60\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3474.9958\nAspect:  182.76314801977233\nEastness:  -0.9988373503453954\nNorthness:  -0.04820733922329438\nCurvature:  -0.061601233\nSlope:  13.283986\nProcessing grid  61\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2177.3674\nAspect:  52.18949593863494\nEastness:  0.6130519028306993\nNorthness:  0.7900426345683242\nCurvature:  0.003008141\nSlope:  13.148756\nProcessing grid  62\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1836.9568\nAspect:  210.23751565425692\nEastness:  -0.8639452534892584\nNorthness:  -0.5035857414317655\nCurvature:  -0.010830705\nSlope:  6.414713\nProcessing grid  63\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1214.8872\nAspect:  247.49405289727707\nEastness:  -0.38277932578703494\nNorthness:  -0.9238398063246803\nCurvature:  0.039931994\nSlope:  12.966995\nProcessing grid  64\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2650.213\nAspect:  254.7245799451118\nEastness:  -0.26345922962600316\nNorthness:  -0.964670531489831\nCurvature:  0.008411927\nSlope:  4.0186095\nProcessing grid  65\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2272.7756\nAspect:  265.89377655896936\nEastness:  -0.07160578546651786\nNorthness:  -0.9974330110276695\nCurvature:  0.037764423\nSlope:  14.1827755\nProcessing grid  66\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2944.019\nAspect:  266.4631889395058\nEastness:  -0.061689802754012625\nNorthness:  -0.9980953703109593\nCurvature:  -0.083527185\nSlope:  31.036201\nProcessing grid  67\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3036.9316\nAspect:  96.15234321069134\nEastness:  -0.10717241559831002\nNorthness:  0.9942404504619711\nCurvature:  -0.010428555\nSlope:  8.107492\nProcessing grid  68\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2307.4607\nAspect:  344.35345899839547\nEastness:  0.9629438071840436\nNorthness:  -0.26970210270945133\nCurvature:  0.041438825\nSlope:  14.322107\nProcessing grid  69\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2036.9033\nAspect:  253.74011745928118\nEastness:  C:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\n-0.2799946020257401\nNorthness:  -0.9600015743926921\nCurvature:  -0.0010335586\nSlope:  10.246265\nProcessing grid  70\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1832.5925\nAspect:  229.40249371055742\nEastness:  -0.6507411705352469\nNorthness:  -0.7592996305612275\nCurvature:  0.00045949005\nSlope:  21.678272\nProcessing grid  71\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1185.6846\nAspect:  234.14935224031123\nEastness:  -0.5856744025681068\nNorthness:  -0.8105464170400676\nCurvature:  -0.0032080591\nSlope:  27.216345\nProcessing grid  72\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1974.8345\nAspect:  236.99754112420655\nEastness:  -0.5446750264621965\nNorthness:  -0.8386471937283315\nCurvature:  0.012436659\nSlope:  11.653961\nProcessing grid  73\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2755.3735\nAspect:  308.59499226867604\nEastness:  0.6238112883434124\nNorthness:  -0.7815749973837008\nCurvature:  -0.054967105\nSlope:  16.812115\nProcessing grid  74\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2287.6924\nAspect:  43.41020642102691\nEastness:  0.7264522646621204\nNorthness:  0.6872169287548704\nCurvature:  0.049774475\nSlope:  16.831236\nProcessing grid  75\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2085.6292\nAspect:  45.11108403380558\nEastness:  0.705734527086581\nNorthness:  0.7084763773605156\nCurvature:  0.059430752\nSlope:  13.32652\nProcessing grid  76\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3226.4172\nAspect:  49.57163469393079\nEastness:  0.6484968348579669\nNorthness:  0.7612173508132869\nCurvature:  0.007320294\nSlope:  12.033453\nProcessing grid  77\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3471.2827\nAspect:  204.79757050866525\nEastness:  -0.9077952635853129\nNorthness:  -0.4194135899229689\nCurvature:  0.053831846\nSlope:  17.530268\nProcessing grid  78\n==> Searched items:  2\nreproject data to EPSG:32612\nElevation:  2583.864\nAspect:  51.1930567160947\nEastness:  0.6266982494045108\nNorthness:  0.7792620253761385\nCurvature:  -0.028289637\nSlope:  35.39708\nProcessing grid  79\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1772.8773\nAspect:  118.58730165289215\nEastness:  -0.47849726060423015\nNorthness:  0.8780890453674088\nCurvature:  -0.038940117\nSlope:  8.888756\nProcessing grid  80\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1988.2115\nAspect:  58.34320951287129\nEastness:  0.5248298639804388\nNorthness:  0.851207150976937\nCurvature:  0.011962082\nSlope:  3.8706977\nProcessing grid  81\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2845.1416\nAspect:  68.51808084773675\nEastness:  0.36620759630632355\nNorthness:  0.9305331785635291\nCurvature:  0.024575256\nSlope:  15.223867\nProcessing grid  82\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1548.8906\nAspect:  47.164074973771335\nEastness:  0.6799012266292256\nNorthness:  0.7333037038145072\nCurvature:  -0.018144196\nSlope:  5.4864655\nProcessing grid  83\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1652.1158\nAspect:  47.760896903447055\nEastness:  0.6722260155263038\nNorthness:  0.7403459894195615\nCurvature:  0.037511934\nSlope:  11.478478\nProcessing grid  84\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1868.8004\nAspect:  206.67508022847503\nEastness:  -0.8935667270625208\nNorthness:  -0.4489304002702138\nCurvature:  0.04791437\nSlope:  9.322242\nProcessing grid  85\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1812.0571\nAspect:  46.12522027648532\nEastness:  0.6930845911828665\nNorthness:  0.7208562613065651\nCurvature:  0.025714817\nSlope:  7.6248074\nProcessing grid  86\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3547.595\nAspect:  311.83379967120436\nEastness:  0.6669721221305083\nNorthness:  -0.7450826721248631\nCurvature:  0.021645416\nSlope:  27.899397\nProcessing grid  87\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1821.5187\nAspect:  131.68274138628755\nEastness:  -0.6650054223987913\nNorthness:  0.746838528853597\nCurvature:  -0.009517623\nSlope:  1.5055597\nProcessing grid  88\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2459.1233\nAspect:  134.07965967172012\nEastness:  -0.695657813816447\nNorthness:  0.7183733055147036\nCurvature:  -0.0051186522\nSlope:  7.423744\nProcessing grid  89\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1320.7866\nAspect:  301.30151136726136\nEastness:  0.5195416508999564\nNorthness:  -0.8544451257864064\nCurvature:  0.02949031\nSlope:  12.204902\nProcessing grid  90\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  840.3078\nAspect:  26.08592848755169\nEastness:  0.8981355951951492\nNorthness:  0.43971860620566783\nCurvature:  -0.014862551\nSlope:  18.779049\nProcessing grid  91\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  466.30728\nAspect:  30.62957352157198\nEastness:  0.8604791679214664\nNorthness:  0.5094856245010068\nCurvature:  0.023207683\nSlope:  15.973783\nProcessing grid  92\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2186.583\nAspect:  291.01031508064136\nEastness:  0.35853601819994607\nNorthness:  -0.9335158936265242\nCurvature:  -0.027963502\nSlope:  5.092876\nProcessing grid  93\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3307.2688\nAspect:  272.3481892114155\nEastness:  0.040972161079985824\nNorthness:  -0.9991602884504747\nCurvature:  0.04316304\nSlope:  27.155798\nProcessing grid  94\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3322.0073\nAspect:  77.50761383328152\nEastness:  0.21630987550768\nNorthness:  0.9763247603937186\nCurvature:  -0.030701151\nSlope:  10.67603\nProcessing grid  95\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3021.8413\nAspect:  75.98239844067183\nEastness:  0.24221996403677626\nNorthness:  0.9702213608357748\nCurvature:  0.10589664\nSlope:  28.342762\nProcessing grid  96\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2137.895\nAspect:  277.12275098844293\nEastness:  0.1239955018108193\nNorthness:  -0.9922827800232569\nCurvature:  -0.05917405\nSlope:  15.179299\nProcessing grid  97\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1400.137\nAspect:  55.8099060100919\nEastness:  0.5619403734305589\nNorthness:  0.8271777419084269\nCurvature:  -0.017370382\nSlope:  12.259386\nProcessing grid  98\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2628.307\nAspect:  55.639072733666126\nEastness:  0.5644041877224472\nNorthness:  0.8254985844211755\nCurvature:  0.031771444\nSlope:  13.378003\nProcessing grid  99\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3659.822\nAspect:  199.89203302411372\nEastness:  -0.9403354476831426\nNorthness:  -0.34024879989581713\nCurvature:  -0.015336801\nSlope:  9.519583\nProcessing grid  100\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2732.7922\nAspect:  216.2677257479211\nEastness:  -0.8062616306364842\nNorthness:  -0.5915591119773219\nCurvature:  -0.07367878\nSlope:  14.521866\nProcessing grid  101\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2162.84\nAspect:  98.09465776534621\nEastness:  -0.14080892193112823\nNorthness:  0.990036790985362\nCurvature:  -0.069958605\nSlope:  14.103179\nProcessing grid  102\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2897.3152\nAspect:  205.14810947724862\nEastness:  -0.9052122928087235\nNorthness:  -0.4249596509646225\nCurvature:  -0.012117463\nSlope:  5.255122\nProcessing grid  103\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3311.5784\nAspect:  241.69800900911764\nEastness:  -0.47411880477331947\nNorthness:  -0.8804608787222287\nCurvature:  0.015474774\nSlope:  12.425578\nProcessing grid  104\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1389.3971\nAspect:  C:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\n330.03767107354116\nEastness:  0.8663539587086488\nNorthness:  -0.4994304938926465\nCurvature:  -0.061079405\nSlope:  7.4213643\nProcessing grid  105\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2181.354\nAspect:  49.632693170016125\nEastness:  0.6476852591836114\nNorthness:  0.7619080030005316\nCurvature:  -0.026688995\nSlope:  8.667187\nProcessing grid  106\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  4027.541\nAspect:  8.142311198254513\nEastness:  0.9899193364842029\nNorthness:  0.1416322959450827\nCurvature:  0.11315536\nSlope:  26.955671\nProcessing grid  107\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2594.245\nAspect:  273.0981508124721\nEastness:  0.05404658577386998\nNorthness:  -0.9985384151679833\nCurvature:  -0.14418937\nSlope:  24.808857\nProcessing grid  108\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2932.0605\nAspect:  269.1898072863641\nEastness:  -0.014140059189306218\nNorthness:  -0.9999000243654977\nCurvature:  -0.10226547\nSlope:  24.71412\nProcessing grid  109\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2265.7913\nAspect:  346.08938060425817\nEastness:  0.9706719402182935\nNorthness:  -0.24040795426286066\nCurvature:  -0.041908223\nSlope:  2.612857\nProcessing grid  110\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2272.7039\nAspect:  58.717906860549014\nEastness:  0.5192520393526922\nNorthness:  0.8546211556169613\nCurvature:  0.024682634\nSlope:  8.718727\nProcessing grid  111\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1859.8718\nAspect:  168.95412746056334\nEastness:  -0.9814741020460345\nNorthness:  0.1915948512171723\nCurvature:  -0.039293513\nSlope:  8.580903\nProcessing grid  112\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3448.796\nAspect:  316.89027750622404\nEastness:  0.7300463217048877\nNorthness:  -0.6833976647349357\nCurvature:  0.091753304\nSlope:  23.477013\nProcessing grid  113\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  696.12134\nAspect:  72.16050461888867\nEastness:  0.30635155834298533\nNorthness:  0.9519184433032194\nCurvature:  -0.0233405\nSlope:  8.502471\nProcessing grid  114\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3063.7585\nAspect:  98.32590748007533\nEastness:  -0.14480362092388113\nNorthness:  0.9894604142497733\nCurvature:  0.11323908\nSlope:  21.201792\nProcessing grid  115\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2229.3987\nAspect:  303.43389301104474\nEastness:  0.5509744935182059\nNorthness:  -0.8345220832862102\nCurvature:  -0.00992739\nSlope:  9.121846\nProcessing grid  116\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3097.8235\nAspect:  278.0950352469834\nEastness:  0.14081544458492246\nNorthness:  -0.9900358632728163\nCurvature:  -0.021224324\nSlope:  8.507125\nProcessing grid  117\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2052.3591\nAspect:  260.29174419418416\nEastness:  -0.16863140880794814\nNorthness:  -0.9856791810540825\nCurvature:  -0.0062252088\nSlope:  5.5240297\nProcessing grid  118\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2472.281\nAspect:  269.36608763865297\nEastness:  -0.011063632156772663\nNorthness:  -0.9999387961487941\nCurvature:  0.11178958\nSlope:  17.739769\nProcessing grid  119\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2322.7034\nAspect:  131.24077350547438\nEastness:  -0.659224735751571\nNorthness:  0.75194597397238\nCurvature:  0.002257909\nSlope:  10.136408\nProcessing grid  120\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2829.0576\nAspect:  233.92853222444472\nEastness:  -0.5887939204939164\nNorthness:  -0.8082831924451996\nCurvature:  -0.15612972\nSlope:  23.14222\nProcessing grid  121\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1542.7339\nAspect:  139.42859937681055\nEastness:  -0.7595960488248303\nNorthness:  0.650395143439514\nCurvature:  -0.0058697253\nSlope:  1.4922913\nProcessing grid  122\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1663.7799\nAspect:  280.8400472932765\nEastness:  0.18806784542998425\nNorthness:  -0.9821560392907654\nCurvature:  -0.024027962\nSlope:  6.62427\nProcessing grid  123\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3285.227\nAspect:  171.76764630423168\nEastness:  -0.989695533616472\nNorthness:  0.14318781630993202\nCurvature:  -0.14131217\nSlope:  24.074673\nProcessing grid  124\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1503.3254\nAspect:  291.2357044930626\nEastness:  0.36220548762631216\nNorthness:  -0.93209826989078\nCurvature:  0.03647939\nSlope:  14.562225\nProcessing grid  125\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2848.954\nAspect:  24.70096761445362\nEastness:  0.9085011204337432\nNorthness:  0.4178824166803783\nCurvature:  -0.0040585115\nSlope:  15.900269\nProcessing grid  126\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2343.3684\nAspect:  277.31653711557453\nEastness:  0.12735089093668167\nNorthness:  -0.9918577269838822\nCurvature:  -0.03522419\nSlope:  10.415788\nProcessing grid  127\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2963.9897\nAspect:  95.80612092166339\nEastness:  -0.10116257994727905\nNorthness:  0.9948699072835656\nCurvature:  -0.30619544\nSlope:  36.658413\nProcessing grid  128\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1878.7838\nAspect:  20.8068155138936\nEastness:  0.9347834286878057\nNorthness:  0.3552181603615868\nCurvature:  0.04328139\nSlope:  14.208315\nProcessing grid  129\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1880.72\nAspect:  175.41203033967537\nEastness:  -0.9967956957745773\nNorthness:  0.07998962986085364\nCurvature:  0.08758038\nSlope:  19.248507\nProcessing grid  130\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1919.23\nAspect:  225.03081747191243\nEastness:  -0.706726349976937\nNorthness:  -0.7074870078300209\nCurvature:  -0.0060117324\nSlope:  13.785514\nProcessing grid  131\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2603.1057\nAspect:  275.57308351860456\nEastness:  0.09711534986282028\nNorthness:  -0.9952731327736231\nCurvature:  0.018798558\nSlope:  13.365308\nProcessing grid  132\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2104.8877\nAspect:  76.48162379729723\nEastness:  0.23375721542115058\nNorthness:  0.9722949985670757\nCurvature:  -0.02048242\nSlope:  13.85768\nProcessing grid  133\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1765.5271\nAspect:  224.83256440106365\nEastness:  -0.709170138858908\nNorthness:  -0.7050373849313504\nCurvature:  -0.01222776\nSlope:  7.913319\nProcessing grid  134\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2845.9297\nAspect:  235.90551681932658\nEastness:  -0.5605592607993589\nNorthness:  -0.8281143128409726\nCurvature:  0.03614402\nSlope:  15.254758\nProcessing grid  135\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2602.7866\nAspect:  41.45755437506323\nEastness:  0.7494463947004067\nNorthness:  0.6620650281283268\nCurvature:  -0.03682539\nSlope:  10.2309065\nProcessing grid  136\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2871.1155\nAspect:  53.95196136715962\nEastness:  0.5884633516040958\nNorthness:  0.8085238919282932\nCurvature:  -0.005255529\nSlope:  13.040473\nProcessing grid  137\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1917.6606\nAspect:  59.70835942228174\nEastness:  0.5044016495162278\nNorthness:  0.8634691517160926\nCurvature:  -0.023249509\nSlope:  3.087579\nProcessing grid  138\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2215.544\nAspect:  217.4656589660713\nEastness:  -0.7937180675207854\nNorthness:  -0.6082858121730852\nCurvature:  0.060136016\nSlope:  23.36957\nProcessing grid  139\n==> Searched items:  1\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nreproject data to EPSG:32612\nElevation:  1731.2634\nAspect:  150.82436019562664\nEastness:  -0.8731294195208378\nNorthness:  0.4874884785994485\nCurvature:  0.10728164\nSlope:  23.667173\nProcessing grid  140\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3803.3115\nAspect:  93.85271413979643\nEastness:  -0.06719188479624486\nNorthness:  0.9977400716707374\nCurvature:  0.01819968\nSlope:  24.008553\nProcessing grid  141\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1141.2946\nAspect:  169.17511140096994\nEastness:  -0.9822057618615724\nNorthness:  0.18780799068710624\nCurvature:  0.054062594\nSlope:  16.577023\nProcessing grid  142\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  970.7464\nAspect:  339.47083850605657\nEastness:  0.9364938249571825\nNorthness:  -0.3506840683821637\nCurvature:  -0.083706126\nSlope:  29.582565\nProcessing grid  143\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3572.0005\nAspect:  314.35613389017675\nEastness:  0.6991161294784921\nNorthness:  -0.7150081380676813\nCurvature:  -0.095499225\nSlope:  23.953276\nProcessing grid  144\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3106.572\nAspect:  352.31720002344184\nEastness:  0.991023377317718\nNorthness:  -0.13368868916173912\nCurvature:  -0.06488474\nSlope:  21.01446\nProcessing grid  145\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2599.287\nAspect:  315.234441575927\nEastness:  0.7099941772523207\nNorthness:  -0.7042075463013728\nCurvature:  -0.13232346\nSlope:  18.102203\nProcessing grid  146\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3454.8997\nAspect:  79.8193938107099\nEastness:  0.1767515938931049\nNorthness:  0.9842554922662342\nCurvature:  0.049393214\nSlope:  15.233959\nProcessing grid  147\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  483.961\nAspect:  330.34878277514065\nEastness:  0.8690530429862688\nNorthness:  -0.49471891865614603\nCurvature:  -0.04316568\nSlope:  21.833532\nProcessing grid  148\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1946.9493\nAspect:  354.4579076678235\nEastness:  0.9953255166991211\nNorthness:  -0.0965769941944128\nCurvature:  -0.008527854\nSlope:  11.950363\nProcessing grid  149\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2057.7305\nAspect:  258.16510332439816\nEastness:  -0.2050922046945425\nNorthness:  -0.9787426564595679\nCurvature:  0.0070076617\nSlope:  15.494971\nProcessing grid  150\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1855.1697\nAspect:  25.52776542857825\nEastness:  0.9023765534988154\nNorthness:  0.4309484373977931\nCurvature:  0.04919924\nSlope:  13.689422\nProcessing grid  151\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2130.0386\nAspect:  161.85165962947718\nEastness:  -0.9502532760801419\nNorthness:  0.31147826777956394\nCurvature:  0.062202614\nSlope:  20.134521\nProcessing grid  152\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1297.49\nAspect:  201.60550892081645\nEastness:  -0.9297410868542272\nNorthness:  -0.36821394788236955\nCurvature:  -0.000699468\nSlope:  20.81611\nProcessing grid  153\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1845.0607\nAspect:  50.022768688610135\nEastness:  0.6424831416253204\nNorthness:  0.7662998190834045\nCurvature:  -0.0040770886\nSlope:  12.17585\nProcessing grid  154\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1630.2037\nAspect:  222.0137180098427\nEastness:  -0.7429845979591235\nNorthness:  -0.6693085142111368\nCurvature:  0.02476752\nSlope:  6.6845484\nProcessing grid  155\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2357.237\nAspect:  224.5652854384627\nEastness:  -0.712451338151593\nNorthness:  -0.7017215193835832\nCurvature:  0.036302075\nSlope:  15.248894\nProcessing grid  156\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3178.6733\nAspect:  43.857723830540735\nEastness:  0.7210625478177315\nNorthness:  0.6928699749120333\nCurvature:  0.003796297\nSlope:  12.404966\nProcessing grid  157\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2835.3584\nAspect:  126.0337651313368\nEastness:  -0.5882619141998497\nNorthness:  0.8086704645910648\nCurvature:  0.008229477\nSlope:  8.836219\nProcessing grid  158\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1277.5042\nAspect:  270.60265923693794\nEastness:  0.010518194000284725\nNorthness:  -0.9999446822674605\nCurvature:  -0.018477833\nSlope:  12.835159\nProcessing grid  159\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2056.1436\nAspect:  35.90570341011007\nEastness:  0.8099832670019657\nNorthness:  0.5864529880364003\nCurvature:  0.050373916\nSlope:  11.913999\nProcessing grid  160\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1413.0906\nAspect:  313.9825635237121\nEastness:  0.6944394259864691\nNorthness:  -0.7195511681844338\nCurvature:  -0.02242079\nSlope:  8.657845\nProcessing grid  161\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2816.3499\nAspect:  188.4625447311761\nEastness:  -0.9891122776662268\nNorthness:  -0.14716284235475016\nCurvature:  0.048113804\nSlope:  8.246809\nProcessing grid  162\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2633.7524\nAspect:  261.5102089609794\nEastness:  -0.14763318595518182\nNorthness:  -0.9890421843403459\nCurvature:  -0.019738102\nSlope:  32.90145\nProcessing grid  163\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1648.4655\nAspect:  15.310801345405288\nEastness:  0.9645076562238664\nNorthness:  0.2640548827148328\nCurvature:  -0.0037839743\nSlope:  1.1089374\nProcessing grid  164\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3902.0908\nAspect:  171.5646940632339\nEastness:  -0.9891821280816356\nNorthness:  0.14669259519105446\nCurvature:  0.15484677\nSlope:  33.96519\nProcessing grid  165\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1970.7383\nAspect:  99.59361791078638\nEastness:  -0.16665891709181677\nNorthness:  0.9860146070691768\nCurvature:  -0.041491177\nSlope:  14.293292\nProcessing grid  166\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1270.0717\nAspect:  343.02706187478833\nEastness:  0.9564427419468948\nNorthness:  -0.29191999139679603\nCurvature:  -0.070978135\nSlope:  15.65723\nProcessing grid  167\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3300.3835\nAspect:  278.84533835749846\nEastness:  0.1537677769969876\nNorthness:  -0.9881070138185463\nCurvature:  0.060436286\nSlope:  18.487757\nProcessing grid  168\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2799.7817\nAspect:  172.25840905647541\nEastness:  -0.9908856782093067\nNorthness:  0.13470550367257572\nCurvature:  -0.095053464\nSlope:  12.18874\nProcessing grid  169\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  3222.402\nAspect:  294.1501120609612\nEastness:  0.40912868754801723\nNorthness:  -0.9124766939627756\nCurvature:  0.002109545\nSlope:  9.203535\nProcessing grid  170\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  327.49097\nAspect:  89.52948443293432\nEastness:  0.008211953527252857\nNorthness:  0.9999662813411592\nCurvature:  -0.080294505\nSlope:  15.265717\nProcessing grid  171\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  2624.964\nAspect:  18.394554916037883\nEastness:  0.9489060049531234\nNorthness:  0.31555885942863804\nCurvature:  -0.038101252\nSlope:  7.669588\nProcessing grid  172\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1730.7725\nAspect:  255.71796948818763\nEastness:  -0.24669509134128548\nNorthness:  -0.9690931492421742\nCurvature:  0.00584908\nSlope:  11.226352\nProcessing grid  173\n==> Searched items:  1\nreproject data to EPSG:32612\nElevation:  1408.7646\nAspect:  216.3363964698364\nEastness:  -0.805552050260007\nNorthness:  -0.592525015777308\nCurvature:  -0.040209103\nSlope:  C:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\nC:\\Users\\BLi\\gw-workspace\\swatjljae3m\\data_terrainFeatures.py:72: DeprecationWarning: open_rasterio is Deprecated in favor of rioxarray. For information about transitioning, see: https://corteva.github.io/rioxarray/stable/getting_started/getting_started.html\n  xarray.open_rasterio(signed_asset.href)\n",
  "history_begin_time" : 1656439450947,
  "history_end_time" : 1656443767159,
  "history_notes" : null,
  "history_process" : "urd0nk",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "gimmczmnenr",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\n\nexit() # done, uncomment if you want to download new files.\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\n\norg_name = 'modis'\nproduct_name = f'MODIS/006/MOD10A1'\nvar_name = 'NDSI'\ncolumn_name = 'mod10a1_ndsi'\n\n#org_name = 'sentinel1'\n#product_name = 'COPERNICUS/S1_GRD'\n#var_name = 'VV'\n#column_name = 's1_grd_vv'\n\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n    \n    try:\n      \n  \t  print(station_cell_mapper_df['station_id'][ind], station_cell_mapper_df['cell_id'][ind])\n  \t  current_cell_id = station_cell_mapper_df['cell_id'][ind]\n  \t  print(\"collecting \", current_cell_id)\n  \t  single_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/modis/{column_name}_{current_cell_id}.csv\"\n\n  \t  if os.path.exists(single_csv_file):\n  \t    print(\"exists skipping..\")\n  \t    continue\n\n  \t  longitude = station_cell_mapper_df['lon'][ind]\n  \t  latitude = station_cell_mapper_df['lat'][ind]\n\n  \t  # identify a 500 meter buffer around our Point Of Interest (POI)\n  \t  poi = ee.Geometry.Point(longitude, latitude).buffer(30)\n\n  \t  def poi_mean(img):\n  \t      reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi, scale=30)\n  \t      mean = reducer.get(var_name)\n  \t      return img.set('date', img.date().format()).set(column_name,mean)\n        \n  \t  viirs1 = ee.ImageCollection(product_name).filterDate('2013-01-01','2017-12-31')\n  \t  poi_reduced_imgs1 = viirs1.map(poi_mean)\n  \t  nested_list1 = poi_reduced_imgs1.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n  \t  # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n  \t  df1 = pd.DataFrame(nested_list1.getInfo(), columns=['date',column_name])\n      \n  \t  viirs2 = ee.ImageCollection(product_name).filterDate('2018-01-01','2021-12-31')\n  \t  poi_reduced_imgs2 = viirs2.map(poi_mean)\n  \t  nested_list2 = poi_reduced_imgs2.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n  \t  # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n  \t  df2 = pd.DataFrame(nested_list2.getInfo(), columns=['date',column_name])\n      \n\n  \t  df = pd.concat([df1, df2])\n  \t  df['date'] = pd.to_datetime(df['date'])\n  \t  df = df.set_index('date')\n  \t  df['cell_id'] = current_cell_id\n  \t  df['latitude'] = latitude\n  \t  df['longitude'] = longitude\n  \t  df.to_csv(single_csv_file)\n\n  \t  df_list = [all_cell_df, df]\n  \t  all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n  \t  print(e)\n  \t  pass\n    \n    \nall_cell_df.to_csv(f\"{homedir}/Documents/GitHub/SnowCast/data/{org_name}/{column_name}.csv\")  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1656439448369,
  "history_end_time" : 1656439450600,
  "history_notes" : null,
  "history_process" : "525l8q",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "2mjv8v4yab4",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\n\nexit() # uncomment to download new files\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\n#org_name = 'modis'\n#product_name = f'MODIS/006/MOD10A1'\n#var_name = 'NDSI'\n#column_name = 'mod10a1_ndsi'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      single_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/{org_name}/{column_name}_{current_cell_id}.csv\"\n\n      if os.path.exists(single_csv_file):\n          print(\"exists skipping..\")\n          continue\n\n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n      viirs = ee.ImageCollection(product_name).filterDate('2013-01-01','2021-12-31').filterBounds(poi).filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')).select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      \n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n      df.to_csv(single_csv_file)\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(f\"{homedir}/Documents/GitHub/SnowCast/data/{org_name}/{column_name}.csv\")  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1656439448369,
  "history_end_time" : 1656439450589,
  "history_notes" : null,
  "history_process" : "7temiv",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "fkzcd352tyc",
  "history_input" : "import json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport math\n\n#pd.set_option('display.max_columns', None)\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\ngridcells_file = f\"{github_dir}/data/snowcast_provided/grid_cells.geojson\"\nmodel_dir = f\"{github_dir}/model/\"\ntraining_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_train_features.csv\"\ntesting_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_test_features.csv\"\ntrain_labels_file = f\"{github_dir}/data/snowcast_provided/train_labels.csv\"\nground_measure_metadata_file = f\"{github_dir}/data/snowcast_provided/ground_measures_metadata.csv\"\n\nready_for_training_folder = f\"{github_dir}/data/ready_for_training/\"\n\nresult_mapping_file = f\"{ready_for_training_folder}station_cell_mapping.csv\"\n\n\nif os.path.exists(result_mapping_file):\n    exit()\n\n\ngridcells = geojson.load(open(gridcells_file))\ntraining_df = pd.read_csv(training_feature_file, header=0)\ntesting_df = pd.read_csv(testing_feature_file, header=0)\nground_measure_metadata_df = pd.read_csv(ground_measure_metadata_file, header=0)\ntrain_labels_df = pd.read_csv(train_labels_file, header=0)\n\nprint(\"training: \", training_df.head())\nprint(\"testing: \", testing_df.head())\nprint(\"ground measure metadata: \", ground_measure_metadata_df.head())\nprint(\"training labels: \", train_labels_df.head())\n\n\ndef calculateDistance(lat1, lon1, lat2, lon2):\n    lat1 = float(lat1)\n    lon1 = float(lon1)\n    lat2 = float(lat2)\n    lon2 = float(lon2)\n    return math.sqrt((lat1-lat2)**2 + (lon1-lon2)**2)\n  \n# prepare the training data\n\nstation_cell_mapper_df = pd.DataFrame(columns = [\"station_id\", \"cell_id\", \"lat\", \"lon\"])\n\nground_measure_metadata_df = ground_measure_metadata_df.reset_index()  # make sure indexes pair with number of rows\nfor index, row in ground_measure_metadata_df.iterrows():\n  \t\n    print(row['station_id'], row['name'], row['latitude'], row['longitude'])\n    station_lat = row['latitude']\n    station_lon = row['longitude']\n    \n    shortest_dis = 999\n    associated_cell_id = None\n    associated_lat = None\n    associated_lon = None\n    \n    for idx,cell in enumerate(gridcells['features']):\n    \n      current_cell_id = cell['properties']['cell_id']\n\n      #print(\"collecting \", current_cell_id)\n      cell_lon = np.unique(np.ravel(cell['geometry']['coordinates'])[0::2]).mean()\n      cell_lat = np.unique(np.ravel(cell['geometry']['coordinates'])[1::2]).mean()\n\n      dist = calculateDistance(station_lat, station_lon, cell_lat, cell_lon)\n\n      if dist < shortest_dis:\n        associated_cell_id = current_cell_id\n        shortest_dis = dist\n        associated_lat = cell_lat\n        associated_lon = cell_lon\n    \n    station_cell_mapper_df.loc[len(station_cell_mapper_df.index)] = [row['station_id'], associated_cell_id, associated_lat, associated_lon]\n    \nprint(station_cell_mapper_df.head())\nstation_cell_mapper_df.to_csv(f\"{ready_for_training_folder}station_cell_mapping.csv\")\n    \n\n\n      \n",
  "history_output" : "C:\\Users\\BLi\n",
  "history_begin_time" : 1656439445115,
  "history_end_time" : 1656439447361,
  "history_notes" : null,
  "history_process" : "rmxece",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "suis9crv2bb",
  "history_input" : "# This script will download modis data for all the testing sites from Google Earth Engine.\n# The start date is the last stop date of the last run.\n\nfrom all_dependencies import *\nfrom datetime import date\nfrom snowcast_utils import *\nimport traceback\n\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\norg_name = 'modis'\nproduct_name = f'MODIS/006/MOD10A1'\nvar_name = 'NDSI'\ncolumn_name = 'mod10a1_ndsi'\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/modis\", \"%Y-%m-%d\")\nend_date = test_end_date\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\nif os.path.exists(final_csv_file):\n    #print(\"exists exiting..\")\n    #exit()\n    os.remove(final_csv_file)\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\nprint(\"start to traverse the cells in submission_format_eval.csv..\")\n\nfor current_cell_id in submission_format_df.index:\n    \n    try:\n      \n  \t  longitude = all_cell_coords_df['lon'][current_cell_id]\n  \t  latitude = all_cell_coords_df['lat'][current_cell_id]\n\n  \t  # identify a 500 meter buffer around our Point Of Interest (POI)\n  \t  poi = ee.Geometry.Point(longitude, latitude).buffer(30)\n\n  \t  def poi_mean(img):\n  \t      reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi, scale=30)\n  \t      mean = reducer.get(var_name)\n  \t      return img.set('date', img.date().format()).set(column_name,mean)\n        \n  \t  viirs1 = ee.ImageCollection(product_name).filterDate(start_date, end_date)\n  \t  poi_reduced_imgs1 = viirs1.map(poi_mean)\n  \t  nested_list1 = poi_reduced_imgs1.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n  \t  # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n  \t  df = pd.DataFrame(nested_list1.getInfo(), columns=['date',column_name])\n      \n  \t  df['date'] = pd.to_datetime(df['date'])\n  \t  df = df.set_index('date')\n  \t  df['cell_id'] = current_cell_id\n  \t  df['latitude'] = latitude\n  \t  df['longitude'] = longitude\n  \t  #df.to_csv(single_csv_file)\n\n  \t  df_list = [all_cell_df, df]\n  \t  all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      print(traceback.format_exc())\n      print(\"failed\", e)\n      pass\n    \n    \nall_cell_df.to_csv(final_csv_file)  \n\nprint(f\"All points have been saved to {final_csv_file}\")\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"C:\\Users\\BLi\\gw-workspace\\suis9crv2bb\\data_gee_modis_real_time.py\", line 4, in <module>\n    from all_dependencies import *\nModuleNotFoundError: No module named 'all_dependencies'\n",
  "history_begin_time" : 1656439469996,
  "history_end_time" : 1656439470095,
  "history_notes" : null,
  "history_process" : "illwc1",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "px78lc984c8",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"C:\\Users\\BLi\\gw-workspace\\px78lc984c8\\data_gee_sentinel1_real_time.py\", line 5, in <module>\n    from all_dependencies import *\nModuleNotFoundError: No module named 'all_dependencies'\n",
  "history_begin_time" : 1656439471076,
  "history_end_time" : 1656439471180,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "2vl3ocjuifi",
  "history_input" : "'''\nThe wrapper for all the snowcast_wormhole predictors\n'''\nimport os\nimport joblib\nfrom datetime import datetime\nhomedir = os.path.expanduser('~')\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n\nclass BaseHole:\n  \n  def __init__(self):\n    self.classifier = self.get_model()\n    self.train_x = None\n    self.train_y = None\n    self.test_x = None\n    self.test_y = None\n    self.test_y_results = None\n    self.save_file = None\n    \n  def save(self):\n    now = datetime.now()\n    date_time = now.strftime(\"%Y%d%m%H%M%S\")\n    self.save_file = f\"{github_dir}/model/wormhole_{date_time}.joblib\"\n    print(f\"Saving model to {self.save_file}\")\n    joblib.dump(self.classifier, self.save_file)\n  \n  def preprocessing(self):\n    pass\n  \n  def train(self):\n    self.classifier.fit(self.train_x, self.train_y)\n  \n  def test(self):\n    self.test_y_results = self.classifier.predict(self.test_x)\n    return self.test_y_results\n  \n  def predict(self, input_x):\n    return self.classifier.predict(input_x)\n  \n  def evaluate(self):\n    pass\n  \n  def get_model(self):\n    pass\n  \n  def post_processing(self):\n    pass",
  "history_output" : "",
  "history_begin_time" : 1656439444972,
  "history_end_time" : 1656439445770,
  "history_notes" : null,
  "history_process" : "y7nb46",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "ozo9xain3ei",
  "history_input" : "\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\n\nexit() # uncomment to download new files\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\n#org_name = 'modis'\n#product_name = f'MODIS/006/MOD10A1'\n#var_name = 'NDSI'\n#column_name = 'mod10a1_ndsi'\n\norg_name = 'gridmet'\nproduct_name = 'IDAHO_EPSCOR/GRIDMET'\nstart_date = '2013-01-01'\nend_date = '2021-12-31'\n\nvar_list = ['tmmn', 'tmmx', 'pr', 'vpd', 'eto', 'rmax', 'rmin', 'vs']\n\nfor var in var_list:\n\n    var_name = var\n    column_name = var\n\n    dfolder = f\"{homedir}/Documents/GitHub/SnowCast/data/sim_training/{org_name}/\"\n    if not os.path.exists(dfolder):\n        os.makedirs(dfolder)\n\n    all_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\n    for ind in station_cell_mapper_df.index:\n\n        try:\n\n          current_cell_id = station_cell_mapper_df['cell_id'][ind]\n          print(\"collecting \", current_cell_id)\n          single_csv_file = f\"{dfolder}/{column_name}_{current_cell_id}.csv\"\n\n          if os.path.exists(single_csv_file):\n              print(\"exists skipping..\")\n              continue\n\n          longitude = station_cell_mapper_df['lon'][ind]\n          latitude = station_cell_mapper_df['lat'][ind]\n\n          # identify a 500 meter buffer around our Point Of Interest (POI)\n          poi = ee.Geometry.Point(longitude, latitude).buffer(1000)\n          viirs = ee.ImageCollection(product_name).filterDate(start_date, end_date).filterBounds(poi).select(var_name)\n\n          def poi_mean(img):\n              reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi, scale=1000)\n              mean = reducer.get(var_name)\n              return img.set('date', img.date().format()).set(column_name,mean)\n\n\n          poi_reduced_imgs = viirs.map(poi_mean)\n\n          nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n          # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n          df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n          df['date'] = pd.to_datetime(df['date'])\n          df = df.set_index('date')\n\n          df['cell_id'] = current_cell_id\n          df['latitude'] = latitude\n          df['longitude'] = longitude\n          df.to_csv(single_csv_file)\n\n          df_list = [all_cell_df, df]\n          all_cell_df = pd.concat(df_list) # merge into big dataframe\n\n        except Exception as e:\n\n          print(e)\n          pass\n    \n    all_cell_df.to_csv(f\"{dfolder}/{column_name}.csv\")  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1656439454900,
  "history_end_time" : 1656439457110,
  "history_notes" : null,
  "history_process" : "a8p3n7",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "zokr4eet49c",
  "history_input" : "\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom datetime import date\nfrom snowcast_utils import *\nimport traceback\n\n\n# exit() # uncomment to download new files\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nprint(submission_format_df.shape)\n\n#org_name = 'modis'\n#product_name = f'MODIS/006/MOD10A1'\n#var_name = 'NDSI'\n#column_name = 'mod10a1_ndsi'\n\norg_name = 'gridmet'\nproduct_name = 'IDAHO_EPSCOR/GRIDMET'\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sim_testing/{org_name}/\", \"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n#start_date = \"2022-04-06\"\n#end_date = \"2022-04-18\"\n\nvar_list = ['tmmn', 'tmmx', 'pr', 'vpd', 'eto', 'rmax', 'rmin', 'vs']\n\n\ndfolder = f\"{homedir}/Documents/GitHub/SnowCast/data/sim_testing/{org_name}/\"\nif not os.path.exists(dfolder):\n  os.makedirs(dfolder)\n  \ncolumn_list = ['date', 'cell_id', 'latitude', 'longitude']\ncolumn_list.extend(var_list)\nreduced_column_list = ['date']\nreduced_column_list.extend(var_list)\n\nall_cell_df = pd.DataFrame(columns = column_list)\n\ncount = 0\n\nfor current_cell_id in submission_format_df.index:\n\n  try:\n    count+=1\n    print(f\"=> Collected GridMet data for {count} cells\")\n    print(\"collecting \", current_cell_id)\n    #single_csv_file = f\"{dfolder}/{column_name}_{current_cell_id}.csv\"\n\n    #if os.path.exists(single_csv_file):\n    #  os.remove(single_csv_file)\n    #  print(\"exists skipping..\")\n    #  continue\n\n    longitude = all_cell_coords_pd['lon'][current_cell_id]\n    latitude = all_cell_coords_pd['lat'][current_cell_id]\n\n    # identify a 500 meter buffer around our Point Of Interest (POI)\n    poi = ee.Geometry.Point(longitude, latitude).buffer(1000)\n    viirs = ee.ImageCollection(product_name).filterDate(start_date, end_date).filterBounds(poi).select(var_list)\n\n    def poi_mean(img):\n      reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi, scale=1000)\n      img = img.set('date', img.date().format());\n      for var in var_list:\n        column_name = var\n        mean = reducer.get(column_name)\n        img = img.set(column_name,mean)\n      return img\n\n\n    poi_reduced_imgs = viirs.map(poi_mean)\n\n    nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(9), reduced_column_list).values().get(0)\n\n    # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n    df = pd.DataFrame(nested_list.getInfo(), columns=reduced_column_list)\n\n    df['date'] = pd.to_datetime(df['date'])\n    df = df.set_index('date')\n\n    df['cell_id'] = current_cell_id\n    df['latitude'] = latitude\n    df['longitude'] = longitude\n    #df.to_csv(single_csv_file)\n\n    #print(df.head())\n    \n    df_list = [all_cell_df, df]\n    all_cell_df = pd.concat(df_list) # merge into big dataframe\n    \n    #if count % 4 == 0:\n\n  except Exception as e:\n    print(traceback.format_exc())\n    print(\"Failed: \", e)\n    pass\n\nall_cell_df.to_csv(f\"{dfolder}/all_vars_{start_date}_{end_date}.csv\")  \n\n\n",
  "history_output" : "today date = 2022-06-28\nC:\\Users\\BLi\nEmpty DataFrame\nColumns: [cell_id, lat, lon]\nIndex: []\n2022-03-11 13:26:22\nC:\\Users\\BLi\n(20759, 25)\nTraceback (most recent call last):\n  File \"C:\\Users\\BLi\\gw-workspace\\zokr4eet49c\\data_gee_gridmet_real_time.py\", line 46, in <module>\n    start_date = findLastStopDate(f\"{github_dir}/data/sim_testing/{org_name}/\", \"%Y-%m-%d %H:%M:%S\")\n  File \"C:\\Users\\BLi\\gw-workspace\\zokr4eet49c\\snowcast_utils.py\", line 75, in findLastStopDate\n    latest_date = get_latest_date_from_an_array(date_list, data_format)\n  File \"C:\\Users\\BLi\\gw-workspace\\zokr4eet49c\\snowcast_utils.py\", line 64, in get_latest_date_from_an_array\n    return max(arr, key=lambda x: datetime.datetime.strptime(x, date_format))\nValueError: max() arg is an empty sequence\n",
  "history_begin_time" : 1656439469219,
  "history_end_time" : 1656439493276,
  "history_notes" : null,
  "history_process" : "smsdr0",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "fve5vteywtu",
  "history_input" : "from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom base_hole import BaseHole\nfrom sklearn.model_selection import train_test_split\nfrom datetime import datetime\nfrom model_creation_rf import RandomForestHole\nfrom sklearn.ensemble import ExtraTreesRegressor\n\nclass XGBoostHole(RandomForestHole):\n\n  def get_model(self):\n    \"\"\"\n    rfc_pipeline = Pipeline(steps = [\n      ('data_scaling', StandardScaler()),\n      ('model', RandomForestRegressor(max_depth = 15,\n                                       min_samples_leaf = 0.004,\n                                       min_samples_split = 0.008,\n                                       n_estimators = 25))])\n    #return rfc_pipeline\n  \t\"\"\"\n    etmodel = ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                    max_depth=None, max_features='auto', max_leaf_nodes=None,\n                    max_samples=None, min_impurity_decrease=0.0,\n                    #min_impurity_split=None, \n                    min_samples_leaf=1,\n                    min_samples_split=2, min_weight_fraction_leaf=0.0,\n                    n_estimators=100, n_jobs=-1, oob_score=False,\n                    random_state=123, verbose=0, warm_start=False)\n    return etmodel\n\n\n",
  "history_output" : "",
  "history_begin_time" : 1656439451599,
  "history_end_time" : 1656439453882,
  "history_notes" : null,
  "history_process" : "4i0sop",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "kqj2zi9aih8",
  "history_input" : "# Integrate all the datasets into one training dataset\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport math\nfrom datetime import datetime as dt\n\nfrom datetime import date\nfrom snowcast_utils import *\n\npd.set_option('display.max_columns', None)\n\ntoday = date.today()\n\n# dd/mm/YY\nstart_date = \"2022-01-01\"\n#end_date = today.strftime(\"%Y-%m-%d\")\nend_date = findLastStopDate(f\"{github_dir}/data/sim_testing/gridmet/\", \"%Y-%m-%d %H:%M:%S\")\nprint(\"d1 =\", end_date)\n\nprint(\"integrating datasets into one dataset\")\n#pd.set_option('display.max_columns', None)\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\ngridcells_file = f\"{github_dir}/data/snowcast_provided/grid_cells.geojson\"\nmodel_dir = f\"{github_dir}/model/\"\ntraining_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_train_features.csv\"\ntesting_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_test_features.csv\"\ntrain_labels_file = f\"{github_dir}/data/snowcast_provided/train_labels.csv\"\nground_measure_metadata_file = f\"{github_dir}/data/snowcast_provided/ground_measures_metadata.csv\"\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n\n#example_mod_file = f\"{github_dir}/data/modis/mod10a1_ndsi_f191fe19-0e81-4bc9-9980-29738a05a49b.csv\"\n\n\ntraining_feature_pd = pd.read_csv(training_feature_file, header=0, index_col=0)\ntesting_feature_pd = pd.read_csv(testing_feature_file, header=0, index_col=0)\ntrain_labels_pd = pd.read_csv(train_labels_file, header=0, index_col=0)\nsubmission_format_pd = pd.read_csv(submission_format_file, header=0, index_col=0)\n#print(training_feature_pd.head())\n\nstation_cell_mapper_pd = pd.read_csv(station_cell_mapper_file, header=0, index_col=0)\n#print(station_cell_mapper_pd.head())\n\n#example_mod_pd = pd.read_csv(example_mod_file, header=0, index_col=0)\n#print(example_mod_pd.shape)\ndef getDateStr(x):\n  return x.split(\" \")[0]\n\ndef integrate_modis():\n  \"\"\"\n  Integrate all MODIS data into mod_all.csv. Traverse all the csv files in the sat_testing/modis folder\n  and aggregate them into one file with good headers.\n  \"\"\"\n  all_mod_file = f\"{github_dir}/data/ready_for_testing/modis_all.csv\"\n  ready_mod_file = f\"{github_dir}/data/sat_testing/modis/mod10a1_ndsi_{start_date}_{end_date}.csv\"\n  mod_testing_folder = f\"{github_dir}/data/sat_testing/modis/\"\n  if os.path.exists(all_mod_file):\n    os.remove(all_mod_file)\n    \n  new_modis_pd = None\n  \n  for filename in os.listdir(mod_testing_folder):\n    f = os.path.join(mod_testing_folder, filename)\n    if os.path.isfile(f) and \".csv\" in f:\n      print(f)\n      old_modis_pd = pd.read_csv(f, header = 0)\n      old_modis_pd = old_modis_pd.drop(columns=['date'])\n      old_modis_pd.rename(columns = {'Unnamed: 0':'date'}, inplace = True)\n      #cell_id_list = old_modis_pd[\"cell_id\"].unique()\n      #cell_id_list = np.insert(cell_id_list, 0, \"data\")\n      cell_id_list = submission_format_pd.index\n      date_list = pd.date_range(start=start_date, end=end_date, freq='D').astype(str)\n\n      rows = date_list\n      cols = cell_id_list\n      \n      if new_modis_pd is None:\n        new_modis_pd = pd.DataFrame(([0.0 for col in cols] for row in rows), index=rows, columns=cols)\n      \n      for i, row in old_modis_pd.iterrows():\n        cdate = row['date']\n        ndsi = row['mod10a1_ndsi']\n        cellid = row['cell_id']\n        #print(f\"{cdate} - {ndsi} - {cellid}\")\n        if ndsi != 0:\n           new_modis_pd.at[cdate, cellid] = ndsi\n  \n  #modis_np = numpy.zeros((len(date_list), len(cell_id_list)+1))\n  #modis_np[0] = cell_id_list\n  \n  #s1_pd.loc[:, ~s1_pd.columns.str.match('Unnamed')]\n  #print(new_modis_pd.head())\n  new_modis_pd.to_csv(all_mod_file)\n\n  \ndef integrate_sentinel1():\n  \"\"\"\n  Integrate all Sentinel 1 data into sentinel1_all.csv\n  Turn the rows into \"daily\", right now it has datetime stamps.\n  \"\"\"\n  all_sentinel1_file = f\"{github_dir}/data/ready_for_testing/sentinel1_all.csv\"\n  ready_sentinel1_file = f\"{github_dir}/data/sat_testing/sentinel1/\"\n  if os.path.exists(all_sentinel1_file):\n    os.remove(all_sentinel1_file)\n  new_s1_pd = None\n  for filename in os.listdir(ready_sentinel1_file):\n    f = os.path.join(ready_sentinel1_file, filename)\n    if os.path.isfile(f) and \".csv\" in f:\n      print(f)\n      old_s1_pd = pd.read_csv(f, header = 0)\n      old_s1_pd = old_s1_pd.drop(columns=['date'])\n      old_s1_pd.rename(columns = {'Unnamed: 0':'date'}, inplace = True)\n      #s1_pd.loc[:, ~s1_pd.columns.str.match('Unnamed')]\n\n      #cell_id_list = old_s1_pd[\"cell_id\"].unique()\n      cell_id_list = submission_format_pd.index\n      #date_list = old_s1_pd[\"date\"].unique()\n      date_list = pd.date_range(start=start_date, end=end_date, freq='D').astype(str)\n      rows = date_list\n      cols = cell_id_list\n      \n      if new_s1_pd is None:\n        new_s1_pd = pd.DataFrame(([0.0 for col in cols] for row in rows), index=rows, columns=cols)\n\n      for i, row in old_s1_pd.iterrows():\n        cdate = row['date']\n        xdate = dt.strptime(cdate, \"%Y-%m-%d %H:%M:%S\") #3/7/2022  2:00:48 AM\n        sdate = xdate.strftime(\"%Y-%m-%d\")\n        grd = row['s1_grd_vv']\n        cellid = row['cell_id']\n        if grd == 0:\n          continue\n        new_s1_pd.at[sdate, cellid] = float(grd)\n  \n  new_s1_pd.to_csv(all_sentinel1_file)\n\ndef integrate_gridmet():\n  \"\"\"\n  Integrate all gridMET data into gridmet_all.csv\n  \"\"\"\n  \n  dates = pd.date_range(start=start_date, end=end_date, freq='D').astype(str)\n  \n  #print(mod_all_df.head())\n  var_list = ['tmmn', 'tmmx', 'pr', 'vpd', 'eto', 'rmax', 'rmin', 'vs']\n  \n  for var in var_list:\n    print(\"Processing \", var)\n    all_single_var_file = f\"{github_dir}/data/ready_for_testing/gridmet_{var}_all.csv\"\n    \n    all_gridmet_var_folder = f\"{github_dir}/data/sim_testing/gridmet/\"\n    new_var_pd = None\n    \n    for filename in os.listdir(all_gridmet_var_folder):\n      f = os.path.join(all_gridmet_var_folder, filename)\n      if os.path.isfile(f) and \".csv\" in f:\n        print(f)\n        all_gridmet_var_pd = pd.read_csv(f, header=0)\n        #cell_id_list = old_s1_pd[\"cell_id\"].unique()\n        cell_id_list = submission_format_pd.index\n        #date_list = old_s1_pd[\"date\"].unique()\n        date_list = pd.date_range(start=start_date, end=end_date, freq='D').astype(str)\n        rows = date_list\n        cols = cell_id_list\n        if new_var_pd is None:\n          new_var_pd = pd.DataFrame(([0.0 for col in cols] for row in rows), index=rows, columns=cols)\n\n        for i, row in all_gridmet_var_pd.iterrows():\n          cdate = row[\"Unnamed: 0\"]\n          xdate = dt.strptime(cdate, \"%Y-%m-%d %H:%M:%S\") #3/7/2022  2:00:48 AM\n          sdate = xdate.strftime(\"%Y-%m-%d\")\n          newval = row[var]\n          cellid = row['cell_id']\n          if newval != 0:\n            new_var_pd.at[sdate, cellid] = float(newval)\n  \n    new_var_pd.to_csv(all_single_var_file)\n  \n  \ndef prepare_testing_csv():\n  \"\"\"\n  MOD model:\n    input columns: [m, doy, ndsi]\n    output column: [swe]\n  Sentinel1 model:\n    input columns: [m, doy, grd]\n    output column: [swe]\n  gridMET model:\n    input columns: [m, doy, tmmn, tmmx, pr, vpd, eto, rmax, rmin, vs]\n    output column: [swe]\n  \"\"\"\n  all_ready_file = f\"{github_dir}/data/ready_for_testing/all_ready_3.csv\"\n  if os.path.exists(all_ready_file):\n    os.remove(all_ready_file)\n  \n  all_mod_file = f\"{github_dir}/data/ready_for_testing/modis_all.csv\"\n  modis_all_pd = pd.read_csv(all_mod_file, header=0, index_col = 0)\n  modis_all_np = modis_all_pd.to_numpy()\n  \n  all_sentinel1_file = f\"{github_dir}/data/ready_for_testing/sentinel1_all.csv\"\n  sentinel1_all_pd = pd.read_csv(all_sentinel1_file, header=0, index_col = 0)\n  sentinel1_all_np = sentinel1_all_pd.to_numpy()\n  \n  all_gridmet_eto_file = f\"{github_dir}/data/ready_for_testing/gridmet_eto_all.csv\"\n  gridmet_eto_all_pd = pd.read_csv(all_gridmet_eto_file, header=0, index_col = 0)\n  gridmet_eto_all_np = gridmet_eto_all_pd.to_numpy()\n  \n  all_gridmet_pr_file = f\"{github_dir}/data/ready_for_testing/gridmet_pr_all.csv\"\n  gridmet_pr_all_pd = pd.read_csv(all_gridmet_pr_file, header=0, index_col = 0)\n  gridmet_pr_all_np = gridmet_pr_all_pd.to_numpy()\n  \n  all_gridmet_rmax_file = f\"{github_dir}/data/ready_for_testing/gridmet_rmax_all.csv\"\n  gridmet_rmax_all_pd = pd.read_csv(all_gridmet_rmax_file, header=0, index_col = 0)\n  gridmet_rmax_all_np = gridmet_rmax_all_pd.to_numpy()\n  \n  all_gridmet_rmin_file = f\"{github_dir}/data/ready_for_testing/gridmet_rmin_all.csv\"\n  gridmet_rmin_all_pd = pd.read_csv(all_gridmet_rmin_file, header=0, index_col = 0)\n  gridmet_rmin_all_np = gridmet_rmin_all_pd.to_numpy()\n  \n  all_gridmet_tmmn_file = f\"{github_dir}/data/ready_for_testing/gridmet_tmmn_all.csv\"\n  gridmet_tmmn_all_pd = pd.read_csv(all_gridmet_tmmn_file, header=0, index_col = 0)\n  gridmet_tmmn_all_np = gridmet_tmmn_all_pd.to_numpy()\n  \n  all_gridmet_tmmx_file = f\"{github_dir}/data/ready_for_testing/gridmet_tmmx_all.csv\"\n  gridmet_tmmx_all_pd = pd.read_csv(all_gridmet_tmmx_file, header=0, index_col = 0)\n  gridmet_tmmx_all_np = gridmet_tmmx_all_pd.to_numpy()\n  \n  all_gridmet_vpd_file = f\"{github_dir}/data/ready_for_testing/gridmet_vpd_all.csv\"\n  gridmet_vpd_all_pd = pd.read_csv(all_gridmet_vpd_file, header=0, index_col = 0)\n  gridmet_vpd_all_np = gridmet_vpd_all_pd.to_numpy()\n  \n  all_gridmet_vs_file = f\"{github_dir}/data/ready_for_testing/gridmet_vs_all.csv\"\n  gridmet_vs_all_pd = pd.read_csv(all_gridmet_vs_file, header=0, index_col = 0)\n  gridmet_vs_all_np = gridmet_vs_all_pd.to_numpy()\n  \n  grid_terrain_file = f\"{github_dir}/data/terrain/gridcells_eval_terrainData.csv\"\n  grid_terrain_pd = pd.read_csv(grid_terrain_file, header=0, index_col = 0)\n  grid_terrain_np = grid_terrain_pd.to_numpy()\n  \n  sentinel1_all_pd = sentinel1_all_pd[:modis_all_pd.shape[0]]\n  \n  \n  \n  print(\"modis_all_size: \", modis_all_pd.shape)\n  print(\"sentinel1_all_size: \", sentinel1_all_pd.shape)\n  print(\"gridmet rmax size: \", gridmet_rmax_all_pd.shape)\n  print(\"gridmet eto size: \", gridmet_eto_all_pd.shape)\n  print(\"gridmet vpd size: \", gridmet_vpd_all_pd.shape)\n  print(\"gridmet pr size: \", gridmet_pr_all_pd.shape)\n  print(\"gridmet rmin size: \", gridmet_rmin_all_pd.shape)\n  print(\"gridmet tmmn size: \", gridmet_tmmn_all_pd.shape)\n  print(\"gridmet tmmx size: \", gridmet_tmmx_all_pd.shape)\n  print(\"gridmet vs size: \", gridmet_vs_all_pd.shape)\n  print(\"grid terrain size: \", grid_terrain_pd.shape)\n  print(\"cell_size: \", len(submission_format_pd.index))\n  print(\"station size: \", station_cell_mapper_pd.shape)\n  print(\"training_feature_pd size: \", training_feature_pd.shape)\n  print(\"testing_feature_pd size: \", testing_feature_pd.shape)\n  print(\"grid_terrain_np shape: \", grid_terrain_np.shape)\n  \n  min_len = min( modis_all_pd.shape[0], sentinel1_all_pd.shape[0], gridmet_rmax_all_pd.shape[0], gridmet_eto_all_pd.shape[0], gridmet_vpd_all_pd.shape[0], gridmet_pr_all_pd.shape[0], gridmet_rmin_all_pd.shape[0], gridmet_tmmn_all_pd.shape[0], gridmet_tmmx_all_pd.shape[0], gridmet_vs_all_pd.shape[0], grid_terrain_pd.shape[0] )\n  \n  cell_id_list = modis_all_pd.columns.values\n  \n  \n  \n  # create a multiple numpy array, the dimension is (cell_id, date, variable)\n  #all_testing_np = np.empty((len(modis_all_pd.index.values), len(modis_all_pd.columns.values),  23))\n  all_testing_np = np.empty((min_len, len(modis_all_pd.columns.values),  23))\n  print(\"final all numpy shape: \", all_testing_np.shape)\n  \n  modis_all_np = np.expand_dims(modis_all_np[:min_len, :], axis=2)\n  sentinel1_all_np = np.expand_dims(sentinel1_all_np[:min_len, :], axis=2)\n  gridmet_eto_all_np = np.expand_dims(gridmet_eto_all_np[:min_len, :], axis=2)\n  gridmet_pr_all_np = np.expand_dims(gridmet_pr_all_np[:min_len, :], axis=2)\n  gridmet_rmax_all_np = np.expand_dims(gridmet_rmax_all_np[:min_len, :], axis=2)\n  gridmet_rmin_all_np = np.expand_dims(gridmet_rmin_all_np[:min_len, :], axis=2)\n  gridmet_tmmn_all_np = np.expand_dims(gridmet_tmmn_all_np[:min_len, :], axis=2)\n  gridmet_tmmx_all_np = np.expand_dims(gridmet_tmmx_all_np[:min_len, :], axis=2)\n  gridmet_vpd_all_np = np.expand_dims(gridmet_vpd_all_np[:min_len, :], axis=2)\n  gridmet_vs_all_np = np.expand_dims(gridmet_vs_all_np[:min_len, :], axis=2)\n  \n  cell_id_np = np.expand_dims(cell_id_list, axis=0)\n  cell_id_np = np.repeat(cell_id_np, min_len, axis=0)\n  cell_id_np = np.expand_dims(cell_id_np, axis=2)\n  print(\"cell_id_np shape: \", cell_id_np.shape)\n  \n  grid_terrain_np = np.expand_dims(grid_terrain_np, axis=0)\n  grid_terrain_np = np.repeat(grid_terrain_np, min_len, axis=0)\n  \n  date_np = np.empty((min_len, len(modis_all_pd.columns.values),  3))\n  for i in range(min_len):\n    #print(i, \" - \", modis_all_pd.index.values[i])\n    date_time_obj = dt.strptime(modis_all_pd.index.values[i], '%Y-%m-%d')\n    date_np[i, :, 0] = date_time_obj.year\n    date_np[i, :, 1] = date_time_obj.month\n    date_np[i, :, 2] = date_time_obj.timetuple().tm_yday\n  \n  new_np = np.concatenate((cell_id_np, date_np, modis_all_np, sentinel1_all_np, gridmet_eto_all_np, gridmet_pr_all_np, gridmet_rmax_all_np, gridmet_rmin_all_np, gridmet_tmmn_all_np, gridmet_tmmx_all_np, gridmet_vpd_all_np, gridmet_vs_all_np, grid_terrain_np), axis=2)\n  print(\"new numpy shape: \", new_np.shape)\n  \n  new_np = new_np.reshape(-1,new_np.shape[-1])\n  print(\"reshaped: \", new_np.shape)\n  \n  #all_training_pd = pd.DataFrame(columns=[\"cell_id\", \"year\", \"m\", \"doy\", \"ndsi\", \"grd\", \"eto\", \"pr\", \"rmax\", \"rmin\", \"tmmn\", \"tmmx\", \"vpd\", \"vs\", \"lat\", \"lon\", \"elevation\", \"aspect\", \"curvature\", \"slope\", \"eastness\", \"northness\", \"swe\"])\n  all_testing_pd = pd.DataFrame(new_np, columns=[\"cell_id\", \"year\", \"m\", \"doy\", \"ndsi\", \"grd\", \"eto\", \"pr\", \"rmax\", \"rmin\", \"tmmn\", \"tmmx\", \"vpd\", \"vs\", \"lat\", \"lon\", \"elevation\", \"aspect\", \"curvature\", \"slope\", \"eastness\", \"northness\"])\n  \n  #print(\"MODIS all np shape: \", modis_all_np.shape)\n  #print(\"Terrain numpy shape: \", grid_terrain_np.shape)\n  \n  #print(\"Head\", all_testing_pd.head())\n  all_testing_pd.to_csv(all_ready_file)\n  \n  \n  \n#exit() # done already\n\nintegrate_modis()\nintegrate_sentinel1()\nintegrate_gridmet()\nprepare_testing_csv()\n\n\n  \n  \n  \n",
  "history_output" : "today date = 2022-06-28\nC:\\Users\\BLi\nEmpty DataFrame\nColumns: [cell_id, lat, lon]\nIndex: []\n2022-03-11 13:26:22\nTraceback (most recent call last):\n  File \"C:\\Users\\BLi\\gw-workspace\\kqj2zi9aih8\\testing_data_integration.py\", line 25, in <module>\n    end_date = findLastStopDate(f\"{github_dir}/data/sim_testing/gridmet/\", \"%Y-%m-%d %H:%M:%S\")\n  File \"C:\\Users\\BLi\\gw-workspace\\kqj2zi9aih8\\snowcast_utils.py\", line 75, in findLastStopDate\n    latest_date = get_latest_date_from_an_array(date_list, data_format)\n  File \"C:\\Users\\BLi\\gw-workspace\\kqj2zi9aih8\\snowcast_utils.py\", line 64, in get_latest_date_from_an_array\n    return max(arr, key=lambda x: datetime.datetime.strptime(x, date_format))\nValueError: max() arg is an empty sequence\n",
  "history_begin_time" : 1656439493292,
  "history_end_time" : 1656439515896,
  "history_notes" : null,
  "history_process" : "b63prf",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "cjvxrxohpdr",
  "history_input" : "from datetime import date\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport math\nimport datetime\n\ntoday = date.today()\n\n# dd/mm/YY\nd1 = today.strftime(\"%Y-%m-%d\")\nprint(\"today date =\", d1)\n\ntrain_start_date = \"\"\ntrain_end_date = \"\"\n\ntest_start_date = \"2022-01-01\"\ntest_end_date = d1\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n\n\ndef calculateDistance(lat1, lon1, lat2, lon2):\n    lat1 = float(lat1)\n    lon1 = float(lon1)\n    lat2 = float(lat2)\n    lon2 = float(lon2)\n    return math.sqrt((lat1-lat2)**2 + (lon1-lon2)**2)\n\ndef create_cell_location_csv():\n  # read grid cell\n  gridcells_file = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  if os.path.exists(all_cell_coords_file):\n    os.remove(all_cell_coords_file)\n\n  grid_coords_df = pd.DataFrame(columns=[\"cell_id\", \"lat\", \"lon\"])\n  print(grid_coords_df.head())\n  gridcells = geojson.load(open(gridcells_file))\n  for idx,cell in enumerate(gridcells['features']):\n    \n    current_cell_id = cell['properties']['cell_id']\n    cell_lon = np.unique(np.ravel(cell['geometry']['coordinates'])[0::2]).mean()\n    cell_lat = np.unique(np.ravel(cell['geometry']['coordinates'])[1::2]).mean()\n    grid_coords_df.loc[len(grid_coords_df.index)] = [current_cell_id, cell_lat, cell_lon]\n    \n  #grid_coords_np = grid_coords_df.to_numpy()\n  #print(grid_coords_np.shape)\n  grid_coords_df.to_csv(all_cell_coords_file, index=False)\n  #np.savetxt(all_cell_coords_file, grid_coords_np[:, 1:], delimiter=\",\")\n  #print(grid_coords_np.shape)\n  \ndef get_latest_date_from_an_array(arr, date_format):\n  return max(arr, key=lambda x: datetime.datetime.strptime(x, date_format))\n  \n  \ndef findLastStopDate(target_testing_dir, data_format):\n  date_list = []\n  for filename in os.listdir(target_testing_dir):\n    f = os.path.join(target_testing_dir, filename)\n    # checking if it is a file\n    if os.path.isfile(f) and \".csv\" in f:\n        pdf = pd.read_csv(f,header=0, index_col=0)\n        date_list = np.concatenate((date_list, pdf.index.unique()))\n  latest_date = get_latest_date_from_an_array(date_list, data_format)\n  print(latest_date)\n  date_time_obj = datetime.datetime.strptime(latest_date, data_format)\n  return date_time_obj.strftime(\"%Y-%m-%d\")\n\ncreate_cell_location_csv()\n#findLastStopDate(f\"{github_dir}/data/sim_testing/gridmet/\", \"%Y-%m-%d %H:%M:%S\")\nfindLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1/\", \"%Y-%m-%d %H:%M:%S\")\n#findLastStopDate(f\"{github_dir}/data/sat_testing/modis/\", \"%Y-%m-%d\")\n\n\n\n      \n",
  "history_output" : "today date = 2022-06-28\nC:\\Users\\BLi\nEmpty DataFrame\nColumns: [cell_id, lat, lon]\nIndex: []\n2022-03-11 13:26:22\n",
  "history_begin_time" : 1656439446490,
  "history_end_time" : 1656439469069,
  "history_notes" : null,
  "history_process" : "zh38b6",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "ktgtawojysj",
  "history_input" : "\nfrom BaseHole import *\n\nclass KehanModel(BaseHole):\n\t\n  def preprocessing():\n    pass  \n  \n  def train():\n    pass\n  \n  def test():\n    pass",
  "history_output" : "Traceback (most recent call last):\n  File \"C:\\Users\\BLi\\gw-workspace\\ktgtawojysj\\model_create_kehan.py\", line 2, in <module>\n    from BaseHole import *\nModuleNotFoundError: No module named 'BaseHole'\n",
  "history_begin_time" : 1656439454649,
  "history_end_time" : 1656439454755,
  "history_notes" : null,
  "history_process" : "wdh394",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "jynultjxdh6",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['C:\\\\Users\\\\BLi\\\\gw-workspace\\\\jynultjxdh6', 'C:\\\\Users\\\\BLi\\\\anaconda3\\\\envs\\\\snowcast\\\\python39.zip', 'C:\\\\Users\\\\BLi\\\\anaconda3\\\\envs\\\\snowcast\\\\DLLs', 'C:\\\\Users\\\\BLi\\\\anaconda3\\\\envs\\\\snowcast\\\\lib', 'C:\\\\Users\\\\BLi\\\\anaconda3\\\\envs\\\\snowcast', 'C:\\\\Users\\\\BLi\\\\anaconda3\\\\envs\\\\snowcast\\\\lib\\\\site-packages']\nTraceback (most recent call last):\n  File \"C:\\Users\\BLi\\gw-workspace\\jynultjxdh6\\data_snotel_real_time.py\", line 12, in <module>\n    from BeautifulSoup import BeautifulSoup\nModuleNotFoundError: No module named 'BeautifulSoup'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"C:\\Users\\BLi\\gw-workspace\\jynultjxdh6\\data_snotel_real_time.py\", line 14, in <module>\n    from bs4 import BeautifulSoup\nModuleNotFoundError: No module named 'bs4'\n",
  "history_begin_time" : 1656439457792,
  "history_end_time" : 1656439458892,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Failed"
}]
